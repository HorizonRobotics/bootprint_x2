// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: x2.proto

#include "x2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_x2_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Attributes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CharArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Image;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Box;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CaptureFrameMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FloatMatrix;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Points;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SmartFrameMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CaptureTarget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Target;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_x2_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Capture;
}  // namespace protobuf_x2_2eproto
namespace x2 {
class FloatArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatArray>
      _instance;
} _FloatArray_default_instance_;
class FloatMatrixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatMatrix>
      _instance;
} _FloatMatrix_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class PointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Points>
      _instance;
} _Points_default_instance_;
class BoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Box>
      _instance;
} _Box_default_instance_;
class AttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attributes>
      _instance;
} _Attributes_default_instance_;
class TargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Target>
      _instance;
} _Target_default_instance_;
class SmartFrameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SmartFrameMessage>
      _instance;
} _SmartFrameMessage_default_instance_;
class DBResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBResult>
      _instance;
} _DBResult_default_instance_;
class ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Image>
      _instance;
} _Image_default_instance_;
class CharArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CharArray>
      _instance;
} _CharArray_default_instance_;
class CaptureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Capture>
      _instance;
} _Capture_default_instance_;
class CaptureTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CaptureTarget>
      _instance;
} _CaptureTarget_default_instance_;
class CaptureFrameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CaptureFrameMessage>
      _instance;
} _CaptureFrameMessage_default_instance_;
class FrameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameMessage>
      _instance;
} _FrameMessage_default_instance_;
}  // namespace x2
namespace protobuf_x2_2eproto {
static void InitDefaultsFloatArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_FloatArray_default_instance_;
    new (ptr) ::x2::FloatArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::FloatArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FloatArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloatArray}, {}};

static void InitDefaultsFloatMatrix() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_FloatMatrix_default_instance_;
    new (ptr) ::x2::FloatMatrix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::FloatMatrix::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FloatMatrix =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFloatMatrix}, {
      &protobuf_x2_2eproto::scc_info_FloatArray.base,}};

static void InitDefaultsPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_Point_default_instance_;
    new (ptr) ::x2::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint}, {}};

static void InitDefaultsPoints() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_Points_default_instance_;
    new (ptr) ::x2::Points();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::Points::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Points =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPoints}, {
      &protobuf_x2_2eproto::scc_info_Point.base,}};

static void InitDefaultsBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_Box_default_instance_;
    new (ptr) ::x2::Box();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::Box::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Box =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBox}, {
      &protobuf_x2_2eproto::scc_info_Point.base,}};

static void InitDefaultsAttributes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_Attributes_default_instance_;
    new (ptr) ::x2::Attributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::Attributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Attributes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttributes}, {}};

static void InitDefaultsTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_Target_default_instance_;
    new (ptr) ::x2::Target();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::Target::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Target =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsTarget}, {
      &protobuf_x2_2eproto::scc_info_Box.base,
      &protobuf_x2_2eproto::scc_info_Attributes.base,
      &protobuf_x2_2eproto::scc_info_Points.base,
      &protobuf_x2_2eproto::scc_info_FloatArray.base,
      &protobuf_x2_2eproto::scc_info_FloatMatrix.base,}};

static void InitDefaultsSmartFrameMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_SmartFrameMessage_default_instance_;
    new (ptr) ::x2::SmartFrameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::SmartFrameMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SmartFrameMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSmartFrameMessage}, {
      &protobuf_x2_2eproto::scc_info_Target.base,}};

static void InitDefaultsDBResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_DBResult_default_instance_;
    new (ptr) ::x2::DBResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::DBResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBResult}, {}};

static void InitDefaultsImage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_Image_default_instance_;
    new (ptr) ::x2::Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImage}, {}};

static void InitDefaultsCharArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_CharArray_default_instance_;
    new (ptr) ::x2::CharArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::CharArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CharArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCharArray}, {}};

static void InitDefaultsCapture() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_Capture_default_instance_;
    new (ptr) ::x2::Capture();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::Capture::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Capture =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsCapture}, {
      &protobuf_x2_2eproto::scc_info_Image.base,
      &protobuf_x2_2eproto::scc_info_Box.base,
      &protobuf_x2_2eproto::scc_info_Attributes.base,
      &protobuf_x2_2eproto::scc_info_Points.base,
      &protobuf_x2_2eproto::scc_info_FloatArray.base,
      &protobuf_x2_2eproto::scc_info_CharArray.base,}};

static void InitDefaultsCaptureTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_CaptureTarget_default_instance_;
    new (ptr) ::x2::CaptureTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::CaptureTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CaptureTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCaptureTarget}, {
      &protobuf_x2_2eproto::scc_info_Capture.base,
      &protobuf_x2_2eproto::scc_info_DBResult.base,}};

static void InitDefaultsCaptureFrameMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_CaptureFrameMessage_default_instance_;
    new (ptr) ::x2::CaptureFrameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::CaptureFrameMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CaptureFrameMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCaptureFrameMessage}, {
      &protobuf_x2_2eproto::scc_info_CaptureTarget.base,}};

static void InitDefaultsFrameMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x2::_FrameMessage_default_instance_;
    new (ptr) ::x2::FrameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x2::FrameMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FrameMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFrameMessage}, {
      &protobuf_x2_2eproto::scc_info_SmartFrameMessage.base,
      &protobuf_x2_2eproto::scc_info_CaptureFrameMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FloatArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FloatMatrix.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Points.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Box.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Attributes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Target.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SmartFrameMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CharArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Capture.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CaptureTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CaptureFrameMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrameMessage.base);
}

}  // namespace protobuf_x2_2eproto
namespace x2 {

// ===================================================================

void FloatArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatArray::kTypeFieldNumber;
const int FloatArray::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatArray::FloatArray()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_FloatArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.FloatArray)
}
FloatArray::FloatArray(const FloatArray& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      value__(from.value__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  // @@protoc_insertion_point(copy_constructor:x2.FloatArray)
}

void FloatArray::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FloatArray::~FloatArray() {
  // @@protoc_insertion_point(destructor:x2.FloatArray)
  SharedDtor();
}

void FloatArray::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FloatArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FloatArray& FloatArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_FloatArray.base);
  return *internal_default_instance();
}


void FloatArray::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.FloatArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FloatArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.FloatArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.FloatArray.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_value_())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_value_())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.FloatArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.FloatArray)
  return false;
#undef DO_
}

void FloatArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.FloatArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.FloatArray.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated float value_ = 2;
  if (this->value__size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value__cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->value_().data(), this->value__size(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.FloatArray)
}

size_t FloatArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.FloatArray)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated float value_ = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->value__size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value__cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatArray::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FloatArray*>(&from));
}

void FloatArray::MergeFrom(const FloatArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.FloatArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value__.MergeFrom(from.value__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void FloatArray::CopyFrom(const FloatArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.FloatArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatArray::IsInitialized() const {
  return true;
}

void FloatArray::Swap(FloatArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatArray::InternalSwap(FloatArray* other) {
  using std::swap;
  value__.InternalSwap(&other->value__);
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FloatArray::GetTypeName() const {
  return "x2.FloatArray";
}


// ===================================================================

void FloatMatrix::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatMatrix::kTypeFieldNumber;
const int FloatMatrix::kArraysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatMatrix::FloatMatrix()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_FloatMatrix.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.FloatMatrix)
}
FloatMatrix::FloatMatrix(const FloatMatrix& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      arrays__(from.arrays__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  // @@protoc_insertion_point(copy_constructor:x2.FloatMatrix)
}

void FloatMatrix::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FloatMatrix::~FloatMatrix() {
  // @@protoc_insertion_point(destructor:x2.FloatMatrix)
  SharedDtor();
}

void FloatMatrix::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FloatMatrix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FloatMatrix& FloatMatrix::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_FloatMatrix.base);
  return *internal_default_instance();
}


void FloatMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.FloatMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrays__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FloatMatrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.FloatMatrix)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.FloatMatrix.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.FloatArray arrays_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.FloatMatrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.FloatMatrix)
  return false;
#undef DO_
}

void FloatMatrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.FloatMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.FloatMatrix.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated .x2.FloatArray arrays_ = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->arrays_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.FloatMatrix)
}

size_t FloatMatrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.FloatMatrix)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x2.FloatArray arrays_ = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrays_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatMatrix::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FloatMatrix*>(&from));
}

void FloatMatrix::MergeFrom(const FloatMatrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.FloatMatrix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrays__.MergeFrom(from.arrays__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void FloatMatrix::CopyFrom(const FloatMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.FloatMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatMatrix::IsInitialized() const {
  return true;
}

void FloatMatrix::Swap(FloatMatrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatMatrix::InternalSwap(FloatMatrix* other) {
  using std::swap;
  CastToBase(&arrays__)->InternalSwap(CastToBase(&other->arrays__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FloatMatrix::GetTypeName() const {
  return "x2.FloatMatrix";
}


// ===================================================================

void Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
const int Point::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x__, &from.x__,
    static_cast<size_t>(reinterpret_cast<char*>(&score__) -
    reinterpret_cast<char*>(&x__)) + sizeof(score__));
  // @@protoc_insertion_point(copy_constructor:x2.Point)
}

void Point::SharedCtor() {
  ::memset(&x__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score__) -
      reinterpret_cast<char*>(&x__)) + sizeof(score__));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:x2.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_Point.base);
  return *internal_default_instance();
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score__) -
      reinterpret_cast<char*>(&x__)) + sizeof(score__));
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x_ = 1;
  if (this->x_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x_(), output);
  }

  // float y_ = 2;
  if (this->y_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y_(), output);
  }

  // float score_ = 3;
  if (this->score_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->score_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.Point)
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Point)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // float x_ = 1;
  if (this->x_() != 0) {
    total_size += 1 + 4;
  }

  // float y_ = 2;
  if (this->y_() != 0) {
    total_size += 1 + 4;
  }

  // float score_ = 3;
  if (this->score_() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Point*>(&from));
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_() != 0) {
    set_x_(from.x_());
  }
  if (from.y_() != 0) {
    set_y_(from.y_());
  }
  if (from.score_() != 0) {
    set_score_(from.score_());
  }
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(x__, other->x__);
  swap(y__, other->y__);
  swap(score__, other->score__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Point::GetTypeName() const {
  return "x2.Point";
}


// ===================================================================

void Points::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Points::kTypeFieldNumber;
const int Points::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Points::Points()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_Points.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Points)
}
Points::Points(const Points& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      points__(from.points__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  // @@protoc_insertion_point(copy_constructor:x2.Points)
}

void Points::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Points::~Points() {
  // @@protoc_insertion_point(destructor:x2.Points)
  SharedDtor();
}

void Points::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Points::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Points& Points::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_Points.base);
  return *internal_default_instance();
}


void Points::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Points)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Points::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.Points)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Points.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Point points_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Points)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Points)
  return false;
#undef DO_
}

void Points::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Points)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Points.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated .x2.Point points_ = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->points_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.Points)
}

size_t Points::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Points)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x2.Point points_ = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->points__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Points::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Points*>(&from));
}

void Points::MergeFrom(const Points& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Points)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points__.MergeFrom(from.points__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void Points::CopyFrom(const Points& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Points)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Points::IsInitialized() const {
  return true;
}

void Points::Swap(Points* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Points::InternalSwap(Points* other) {
  using std::swap;
  CastToBase(&points__)->InternalSwap(CastToBase(&other->points__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Points::GetTypeName() const {
  return "x2.Points";
}


// ===================================================================

void Box::InitAsDefaultInstance() {
  ::x2::_Box_default_instance_._instance.get_mutable()->top_left__ = const_cast< ::x2::Point*>(
      ::x2::Point::internal_default_instance());
  ::x2::_Box_default_instance_._instance.get_mutable()->bottom_right__ = const_cast< ::x2::Point*>(
      ::x2::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Box::kTypeFieldNumber;
const int Box::kTopLeftFieldNumber;
const int Box::kBottomRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Box::Box()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_Box.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Box)
}
Box::Box(const Box& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_top_left_()) {
    top_left__ = new ::x2::Point(*from.top_left__);
  } else {
    top_left__ = NULL;
  }
  if (from.has_bottom_right_()) {
    bottom_right__ = new ::x2::Point(*from.bottom_right__);
  } else {
    bottom_right__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:x2.Box)
}

void Box::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&top_left__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottom_right__) -
      reinterpret_cast<char*>(&top_left__)) + sizeof(bottom_right__));
}

Box::~Box() {
  // @@protoc_insertion_point(destructor:x2.Box)
  SharedDtor();
}

void Box::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete top_left__;
  if (this != internal_default_instance()) delete bottom_right__;
}

void Box::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Box& Box::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_Box.base);
  return *internal_default_instance();
}


void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && top_left__ != NULL) {
    delete top_left__;
  }
  top_left__ = NULL;
  if (GetArenaNoVirtual() == NULL && bottom_right__ != NULL) {
    delete bottom_right__;
  }
  bottom_right__ = NULL;
  _internal_metadata_.Clear();
}

bool Box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.Box)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Box.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x2.Point top_left_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_left_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x2.Point bottom_right_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bottom_right_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Box)
  return false;
#undef DO_
}

void Box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Box.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // .x2.Point top_left_ = 2;
  if (this->has_top_left_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_top_left_(), output);
  }

  // .x2.Point bottom_right_ = 3;
  if (this->has_bottom_right_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_bottom_right_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.Box)
}

size_t Box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Box)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // .x2.Point top_left_ = 2;
  if (this->has_top_left_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_left__);
  }

  // .x2.Point bottom_right_ = 3;
  if (this->has_bottom_right_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bottom_right__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Box::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Box*>(&from));
}

void Box::MergeFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Box)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_top_left_()) {
    mutable_top_left_()->::x2::Point::MergeFrom(from.top_left_());
  }
  if (from.has_bottom_right_()) {
    mutable_bottom_right_()->::x2::Point::MergeFrom(from.bottom_right_());
  }
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Box::IsInitialized() const {
  return true;
}

void Box::Swap(Box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Box::InternalSwap(Box* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(top_left__, other->top_left__);
  swap(bottom_right__, other->bottom_right__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Box::GetTypeName() const {
  return "x2.Box";
}


// ===================================================================

void Attributes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attributes::kTypeFieldNumber;
const int Attributes::kValueFieldNumber;
const int Attributes::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attributes::Attributes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_Attributes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Attributes)
}
Attributes::Attributes(const Attributes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  ::memcpy(&value__, &from.value__,
    static_cast<size_t>(reinterpret_cast<char*>(&score__) -
    reinterpret_cast<char*>(&value__)) + sizeof(score__));
  // @@protoc_insertion_point(copy_constructor:x2.Attributes)
}

void Attributes::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score__) -
      reinterpret_cast<char*>(&value__)) + sizeof(score__));
}

Attributes::~Attributes() {
  // @@protoc_insertion_point(destructor:x2.Attributes)
  SharedDtor();
}

void Attributes::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Attributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Attributes& Attributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_Attributes.base);
  return *internal_default_instance();
}


void Attributes::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score__) -
      reinterpret_cast<char*>(&value__)) + sizeof(score__));
  _internal_metadata_.Clear();
}

bool Attributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.Attributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Attributes.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Attributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Attributes)
  return false;
#undef DO_
}

void Attributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Attributes.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // float value_ = 2;
  if (this->value_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value_(), output);
  }

  // float score_ = 3;
  if (this->score_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->score_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.Attributes)
}

size_t Attributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Attributes)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // float value_ = 2;
  if (this->value_() != 0) {
    total_size += 1 + 4;
  }

  // float score_ = 3;
  if (this->score_() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attributes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Attributes*>(&from));
}

void Attributes::MergeFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.value_() != 0) {
    set_value_(from.value_());
  }
  if (from.score_() != 0) {
    set_score_(from.score_());
  }
}

void Attributes::CopyFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes::IsInitialized() const {
  return true;
}

void Attributes::Swap(Attributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attributes::InternalSwap(Attributes* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value__, other->value__);
  swap(score__, other->score__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Attributes::GetTypeName() const {
  return "x2.Attributes";
}


// ===================================================================

void Target::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Target::kTypeFieldNumber;
const int Target::kTrackIdFieldNumber;
const int Target::kBoxesFieldNumber;
const int Target::kAttributesFieldNumber;
const int Target::kPointsFieldNumber;
const int Target::kFloatArraysFieldNumber;
const int Target::kFloatMatrixsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Target::Target()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_Target.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Target)
}
Target::Target(const Target& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      boxes__(from.boxes__),
      attributes__(from.attributes__),
      points__(from.points__),
      float_arrays__(from.float_arrays__),
      float_matrixs__(from.float_matrixs__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  track_id__ = from.track_id__;
  // @@protoc_insertion_point(copy_constructor:x2.Target)
}

void Target::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
}

Target::~Target() {
  // @@protoc_insertion_point(destructor:x2.Target)
  SharedDtor();
}

void Target::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Target::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Target& Target::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_Target.base);
  return *internal_default_instance();
}


void Target::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boxes__.Clear();
  attributes__.Clear();
  points__.Clear();
  float_arrays__.Clear();
  float_matrixs__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Target::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.Target)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Target.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 track_id_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Box boxes_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_boxes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Attributes attributes_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Points points_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.FloatArray float_arrays_ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_float_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.FloatMatrix float_matrixs_ = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_float_matrixs_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Target)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Target)
  return false;
#undef DO_
}

void Target::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Target.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->track_id_(), output);
  }

  // repeated .x2.Box boxes_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boxes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->boxes_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.Attributes attributes_ = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->attributes_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.Points points_ = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->points_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.FloatArray float_arrays_ = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->float_arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6,
      this->float_arrays_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.FloatMatrix float_matrixs_ = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->float_matrixs__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7,
      this->float_matrixs_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.Target)
}

size_t Target::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Target)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x2.Box boxes_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->boxes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boxes_(static_cast<int>(i)));
    }
  }

  // repeated .x2.Attributes attributes_ = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes_(static_cast<int>(i)));
    }
  }

  // repeated .x2.Points points_ = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->points__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points_(static_cast<int>(i)));
    }
  }

  // repeated .x2.FloatArray float_arrays_ = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->float_arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->float_arrays_(static_cast<int>(i)));
    }
  }

  // repeated .x2.FloatMatrix float_matrixs_ = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->float_matrixs__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->float_matrixs_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Target::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Target*>(&from));
}

void Target::MergeFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Target)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boxes__.MergeFrom(from.boxes__);
  attributes__.MergeFrom(from.attributes__);
  points__.MergeFrom(from.points__);
  float_arrays__.MergeFrom(from.float_arrays__);
  float_matrixs__.MergeFrom(from.float_matrixs__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.track_id_() != 0) {
    set_track_id_(from.track_id_());
  }
}

void Target::CopyFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Target::IsInitialized() const {
  return true;
}

void Target::Swap(Target* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Target::InternalSwap(Target* other) {
  using std::swap;
  CastToBase(&boxes__)->InternalSwap(CastToBase(&other->boxes__));
  CastToBase(&attributes__)->InternalSwap(CastToBase(&other->attributes__));
  CastToBase(&points__)->InternalSwap(CastToBase(&other->points__));
  CastToBase(&float_arrays__)->InternalSwap(CastToBase(&other->float_arrays__));
  CastToBase(&float_matrixs__)->InternalSwap(CastToBase(&other->float_matrixs__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(track_id__, other->track_id__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Target::GetTypeName() const {
  return "x2.Target";
}


// ===================================================================

void SmartFrameMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmartFrameMessage::kTimestampFieldNumber;
const int SmartFrameMessage::kErrorCodeFieldNumber;
const int SmartFrameMessage::kTargetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmartFrameMessage::SmartFrameMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_SmartFrameMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.SmartFrameMessage)
}
SmartFrameMessage::SmartFrameMessage(const SmartFrameMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      targets__(from.targets__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp__, &from.timestamp__,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code__) -
    reinterpret_cast<char*>(&timestamp__)) + sizeof(error_code__));
  // @@protoc_insertion_point(copy_constructor:x2.SmartFrameMessage)
}

void SmartFrameMessage::SharedCtor() {
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(error_code__));
}

SmartFrameMessage::~SmartFrameMessage() {
  // @@protoc_insertion_point(destructor:x2.SmartFrameMessage)
  SharedDtor();
}

void SmartFrameMessage::SharedDtor() {
}

void SmartFrameMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SmartFrameMessage& SmartFrameMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_SmartFrameMessage.base);
  return *internal_default_instance();
}


void SmartFrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.SmartFrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targets__.Clear();
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(error_code__));
  _internal_metadata_.Clear();
}

bool SmartFrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.SmartFrameMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 timestamp_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 error_code_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Target targets_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_targets_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.SmartFrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.SmartFrameMessage)
  return false;
#undef DO_
}

void SmartFrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.SmartFrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 timestamp_ = 1;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->timestamp_(), output);
  }

  // uint32 error_code_ = 2;
  if (this->error_code_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code_(), output);
  }

  // repeated .x2.Target targets_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->targets_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.SmartFrameMessage)
}

size_t SmartFrameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.SmartFrameMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x2.Target targets_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->targets__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->targets_(static_cast<int>(i)));
    }
  }

  // fixed64 timestamp_ = 1;
  if (this->timestamp_() != 0) {
    total_size += 1 + 8;
  }

  // uint32 error_code_ = 2;
  if (this->error_code_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartFrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SmartFrameMessage*>(&from));
}

void SmartFrameMessage::MergeFrom(const SmartFrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.SmartFrameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targets__.MergeFrom(from.targets__);
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.error_code_() != 0) {
    set_error_code_(from.error_code_());
  }
}

void SmartFrameMessage::CopyFrom(const SmartFrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.SmartFrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartFrameMessage::IsInitialized() const {
  return true;
}

void SmartFrameMessage::Swap(SmartFrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmartFrameMessage::InternalSwap(SmartFrameMessage* other) {
  using std::swap;
  CastToBase(&targets__)->InternalSwap(CastToBase(&other->targets__));
  swap(timestamp__, other->timestamp__);
  swap(error_code__, other->error_code__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SmartFrameMessage::GetTypeName() const {
  return "x2.SmartFrameMessage";
}


// ===================================================================

void DBResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBResult::kDbTypeFieldNumber;
const int DBResult::kMatchIdFieldNumber;
const int DBResult::kDistanceFieldNumber;
const int DBResult::kSimilarityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBResult::DBResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_DBResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.DBResult)
}
DBResult::DBResult(const DBResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_type_().size() > 0) {
    db_type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_type__);
  }
  match_id__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.match_id_().size() > 0) {
    match_id__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_id__);
  }
  ::memcpy(&distance__, &from.distance__,
    static_cast<size_t>(reinterpret_cast<char*>(&similarity__) -
    reinterpret_cast<char*>(&distance__)) + sizeof(similarity__));
  // @@protoc_insertion_point(copy_constructor:x2.DBResult)
}

void DBResult::SharedCtor() {
  db_type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&distance__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&similarity__) -
      reinterpret_cast<char*>(&distance__)) + sizeof(similarity__));
}

DBResult::~DBResult() {
  // @@protoc_insertion_point(destructor:x2.DBResult)
  SharedDtor();
}

void DBResult::SharedDtor() {
  db_type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DBResult& DBResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_DBResult.base);
  return *internal_default_instance();
}


void DBResult::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.DBResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  db_type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&distance__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&similarity__) -
      reinterpret_cast<char*>(&distance__)) + sizeof(similarity__));
  _internal_metadata_.Clear();
}

bool DBResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.DBResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string db_type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_type_().data(), static_cast<int>(this->db_type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.DBResult.db_type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string match_id_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_match_id_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->match_id_().data(), static_cast<int>(this->match_id_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.DBResult.match_id_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float distance_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float similarity_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &similarity__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.DBResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.DBResult)
  return false;
#undef DO_
}

void DBResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.DBResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_type_ = 1;
  if (this->db_type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_type_().data(), static_cast<int>(this->db_type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.DBResult.db_type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_type_(), output);
  }

  // string match_id_ = 2;
  if (this->match_id_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->match_id_().data(), static_cast<int>(this->match_id_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.DBResult.match_id_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->match_id_(), output);
  }

  // float distance_ = 3;
  if (this->distance_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->distance_(), output);
  }

  // float similarity_ = 4;
  if (this->similarity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->similarity_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.DBResult)
}

size_t DBResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.DBResult)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string db_type_ = 1;
  if (this->db_type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_type_());
  }

  // string match_id_ = 2;
  if (this->match_id_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->match_id_());
  }

  // float distance_ = 3;
  if (this->distance_() != 0) {
    total_size += 1 + 4;
  }

  // float similarity_ = 4;
  if (this->similarity_() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DBResult*>(&from));
}

void DBResult::MergeFrom(const DBResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.DBResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.db_type_().size() > 0) {

    db_type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_type__);
  }
  if (from.match_id_().size() > 0) {

    match_id__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_id__);
  }
  if (from.distance_() != 0) {
    set_distance_(from.distance_());
  }
  if (from.similarity_() != 0) {
    set_similarity_(from.similarity_());
  }
}

void DBResult::CopyFrom(const DBResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.DBResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBResult::IsInitialized() const {
  return true;
}

void DBResult::Swap(DBResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBResult::InternalSwap(DBResult* other) {
  using std::swap;
  db_type__.Swap(&other->db_type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  match_id__.Swap(&other->match_id__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(distance__, other->distance__);
  swap(similarity__, other->similarity__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DBResult::GetTypeName() const {
  return "x2.DBResult";
}


// ===================================================================

void Image::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kBufFieldNumber;
const int Image::kTypeFieldNumber;
const int Image::kWidthFieldNumber;
const int Image::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Image)
}
Image::Image(const Image& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buf_().size() > 0) {
    buf__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf__);
  }
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  ::memcpy(&width__, &from.width__,
    static_cast<size_t>(reinterpret_cast<char*>(&height__) -
    reinterpret_cast<char*>(&width__)) + sizeof(height__));
  // @@protoc_insertion_point(copy_constructor:x2.Image)
}

void Image::SharedCtor() {
  buf__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height__) -
      reinterpret_cast<char*>(&width__)) + sizeof(height__));
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:x2.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  buf__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Image& Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_Image.base);
  return *internal_default_instance();
}


void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height__) -
      reinterpret_cast<char*>(&width__)) + sizeof(height__));
  _internal_metadata_.Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes buf_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Image.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buf_ = 1;
  if (this->buf_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buf_(), output);
  }

  // string type_ = 2;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Image.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_(), output);
  }

  // uint32 width_ = 3;
  if (this->width_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width_(), output);
  }

  // uint32 height_ = 4;
  if (this->height_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.Image)
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Image)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bytes buf_ = 1;
  if (this->buf_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf_());
  }

  // string type_ = 2;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint32 width_ = 3;
  if (this->width_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width_());
  }

  // uint32 height_ = 4;
  if (this->height_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Image::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Image*>(&from));
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buf_().size() > 0) {

    buf__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf__);
  }
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.width_() != 0) {
    set_width_(from.width_());
  }
  if (from.height_() != 0) {
    set_height_(from.height_());
  }
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  using std::swap;
  buf__.Swap(&other->buf__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width__, other->width__);
  swap(height__, other->height__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Image::GetTypeName() const {
  return "x2.Image";
}


// ===================================================================

void CharArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharArray::kTypeFieldNumber;
const int CharArray::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharArray::CharArray()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_CharArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.CharArray)
}
CharArray::CharArray(const CharArray& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  array__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.array_().size() > 0) {
    array__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.array__);
  }
  // @@protoc_insertion_point(copy_constructor:x2.CharArray)
}

void CharArray::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CharArray::~CharArray() {
  // @@protoc_insertion_point(destructor:x2.CharArray)
  SharedDtor();
}

void CharArray::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CharArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharArray& CharArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_CharArray.base);
  return *internal_default_instance();
}


void CharArray::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.CharArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CharArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.CharArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.CharArray.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes array_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_array_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.CharArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.CharArray)
  return false;
#undef DO_
}

void CharArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.CharArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.CharArray.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // bytes array_ = 2;
  if (this->array_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->array_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.CharArray)
}

size_t CharArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.CharArray)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // bytes array_ = 2;
  if (this->array_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->array_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharArray::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CharArray*>(&from));
}

void CharArray::MergeFrom(const CharArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.CharArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.array_().size() > 0) {

    array__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.array__);
  }
}

void CharArray::CopyFrom(const CharArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.CharArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharArray::IsInitialized() const {
  return true;
}

void CharArray::Swap(CharArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharArray::InternalSwap(CharArray* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  array__.Swap(&other->array__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CharArray::GetTypeName() const {
  return "x2.CharArray";
}


// ===================================================================

void Capture::InitAsDefaultInstance() {
  ::x2::_Capture_default_instance_._instance.get_mutable()->img__ = const_cast< ::x2::Image*>(
      ::x2::Image::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Capture::kTypeFieldNumber;
const int Capture::kTimestampFieldNumber;
const int Capture::kImgFieldNumber;
const int Capture::kBoxesFieldNumber;
const int Capture::kAttributesFieldNumber;
const int Capture::kPointsFieldNumber;
const int Capture::kFloatArraysFieldNumber;
const int Capture::kCharArraysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Capture::Capture()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_Capture.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Capture)
}
Capture::Capture(const Capture& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      boxes__(from.boxes__),
      attributes__(from.attributes__),
      points__(from.points__),
      float_arrays__(from.float_arrays__),
      char_arrays__(from.char_arrays__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_img_()) {
    img__ = new ::x2::Image(*from.img__);
  } else {
    img__ = NULL;
  }
  timestamp__ = from.timestamp__;
  // @@protoc_insertion_point(copy_constructor:x2.Capture)
}

void Capture::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&img__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp__) -
      reinterpret_cast<char*>(&img__)) + sizeof(timestamp__));
}

Capture::~Capture() {
  // @@protoc_insertion_point(destructor:x2.Capture)
  SharedDtor();
}

void Capture::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete img__;
}

void Capture::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Capture& Capture::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_Capture.base);
  return *internal_default_instance();
}


void Capture::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Capture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boxes__.Clear();
  attributes__.Clear();
  points__.Clear();
  float_arrays__.Clear();
  char_arrays__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && img__ != NULL) {
    delete img__;
  }
  img__ = NULL;
  timestamp__ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Capture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.Capture)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Capture.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 timestamp_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x2.Image img_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_img_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Box boxes_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_boxes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Attributes attributes_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Points points_ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.FloatArray float_arrays_ = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_float_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.CharArray char_arrays_ = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_char_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Capture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Capture)
  return false;
#undef DO_
}

void Capture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Capture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Capture.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // fixed64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->timestamp_(), output);
  }

  // .x2.Image img_ = 3;
  if (this->has_img_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_img_(), output);
  }

  // repeated .x2.Box boxes_ = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boxes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->boxes_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.Attributes attributes_ = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->attributes_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.Points points_ = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6,
      this->points_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.FloatArray float_arrays_ = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->float_arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7,
      this->float_arrays_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.CharArray char_arrays_ = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->char_arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8,
      this->char_arrays_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.Capture)
}

size_t Capture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Capture)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x2.Box boxes_ = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->boxes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boxes_(static_cast<int>(i)));
    }
  }

  // repeated .x2.Attributes attributes_ = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes_(static_cast<int>(i)));
    }
  }

  // repeated .x2.Points points_ = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->points__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points_(static_cast<int>(i)));
    }
  }

  // repeated .x2.FloatArray float_arrays_ = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->float_arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->float_arrays_(static_cast<int>(i)));
    }
  }

  // repeated .x2.CharArray char_arrays_ = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->char_arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->char_arrays_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // .x2.Image img_ = 3;
  if (this->has_img_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *img__);
  }

  // fixed64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Capture::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Capture*>(&from));
}

void Capture::MergeFrom(const Capture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Capture)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boxes__.MergeFrom(from.boxes__);
  attributes__.MergeFrom(from.attributes__);
  points__.MergeFrom(from.points__);
  float_arrays__.MergeFrom(from.float_arrays__);
  char_arrays__.MergeFrom(from.char_arrays__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_img_()) {
    mutable_img_()->::x2::Image::MergeFrom(from.img_());
  }
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
}

void Capture::CopyFrom(const Capture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Capture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Capture::IsInitialized() const {
  return true;
}

void Capture::Swap(Capture* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Capture::InternalSwap(Capture* other) {
  using std::swap;
  CastToBase(&boxes__)->InternalSwap(CastToBase(&other->boxes__));
  CastToBase(&attributes__)->InternalSwap(CastToBase(&other->attributes__));
  CastToBase(&points__)->InternalSwap(CastToBase(&other->points__));
  CastToBase(&float_arrays__)->InternalSwap(CastToBase(&other->float_arrays__));
  CastToBase(&char_arrays__)->InternalSwap(CastToBase(&other->char_arrays__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(img__, other->img__);
  swap(timestamp__, other->timestamp__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Capture::GetTypeName() const {
  return "x2.Capture";
}


// ===================================================================

void CaptureTarget::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CaptureTarget::kTypeFieldNumber;
const int CaptureTarget::kTrackIdFieldNumber;
const int CaptureTarget::kCapturesFieldNumber;
const int CaptureTarget::kDbResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CaptureTarget::CaptureTarget()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_CaptureTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.CaptureTarget)
}
CaptureTarget::CaptureTarget(const CaptureTarget& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      captures__(from.captures__),
      db_results__(from.db_results__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  track_id__ = from.track_id__;
  // @@protoc_insertion_point(copy_constructor:x2.CaptureTarget)
}

void CaptureTarget::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
}

CaptureTarget::~CaptureTarget() {
  // @@protoc_insertion_point(destructor:x2.CaptureTarget)
  SharedDtor();
}

void CaptureTarget::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CaptureTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptureTarget& CaptureTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_CaptureTarget.base);
  return *internal_default_instance();
}


void CaptureTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.CaptureTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  captures__.Clear();
  db_results__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CaptureTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.CaptureTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.CaptureTarget.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 track_id_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.Capture captures_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_captures_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x2.DBResult db_results_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_db_results_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.CaptureTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.CaptureTarget)
  return false;
#undef DO_
}

void CaptureTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.CaptureTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.CaptureTarget.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->track_id_(), output);
  }

  // repeated .x2.Capture captures_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->captures__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->captures_(static_cast<int>(i)),
      output);
  }

  // repeated .x2.DBResult db_results_ = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->db_results__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->db_results_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.CaptureTarget)
}

size_t CaptureTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.CaptureTarget)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x2.Capture captures_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->captures__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->captures_(static_cast<int>(i)));
    }
  }

  // repeated .x2.DBResult db_results_ = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->db_results__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->db_results_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptureTarget::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CaptureTarget*>(&from));
}

void CaptureTarget::MergeFrom(const CaptureTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.CaptureTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  captures__.MergeFrom(from.captures__);
  db_results__.MergeFrom(from.db_results__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.track_id_() != 0) {
    set_track_id_(from.track_id_());
  }
}

void CaptureTarget::CopyFrom(const CaptureTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.CaptureTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureTarget::IsInitialized() const {
  return true;
}

void CaptureTarget::Swap(CaptureTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CaptureTarget::InternalSwap(CaptureTarget* other) {
  using std::swap;
  CastToBase(&captures__)->InternalSwap(CastToBase(&other->captures__));
  CastToBase(&db_results__)->InternalSwap(CastToBase(&other->db_results__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(track_id__, other->track_id__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CaptureTarget::GetTypeName() const {
  return "x2.CaptureTarget";
}


// ===================================================================

void CaptureFrameMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CaptureFrameMessage::kTargetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CaptureFrameMessage::CaptureFrameMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_CaptureFrameMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.CaptureFrameMessage)
}
CaptureFrameMessage::CaptureFrameMessage(const CaptureFrameMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      targets__(from.targets__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:x2.CaptureFrameMessage)
}

void CaptureFrameMessage::SharedCtor() {
}

CaptureFrameMessage::~CaptureFrameMessage() {
  // @@protoc_insertion_point(destructor:x2.CaptureFrameMessage)
  SharedDtor();
}

void CaptureFrameMessage::SharedDtor() {
}

void CaptureFrameMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptureFrameMessage& CaptureFrameMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_CaptureFrameMessage.base);
  return *internal_default_instance();
}


void CaptureFrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.CaptureFrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targets__.Clear();
  _internal_metadata_.Clear();
}

bool CaptureFrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.CaptureFrameMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .x2.CaptureTarget targets_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_targets_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.CaptureFrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.CaptureFrameMessage)
  return false;
#undef DO_
}

void CaptureFrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.CaptureFrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .x2.CaptureTarget targets_ = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->targets_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.CaptureFrameMessage)
}

size_t CaptureFrameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.CaptureFrameMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x2.CaptureTarget targets_ = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->targets__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->targets_(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptureFrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CaptureFrameMessage*>(&from));
}

void CaptureFrameMessage::MergeFrom(const CaptureFrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.CaptureFrameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targets__.MergeFrom(from.targets__);
}

void CaptureFrameMessage::CopyFrom(const CaptureFrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.CaptureFrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureFrameMessage::IsInitialized() const {
  return true;
}

void CaptureFrameMessage::Swap(CaptureFrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CaptureFrameMessage::InternalSwap(CaptureFrameMessage* other) {
  using std::swap;
  CastToBase(&targets__)->InternalSwap(CastToBase(&other->targets__));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CaptureFrameMessage::GetTypeName() const {
  return "x2.CaptureFrameMessage";
}


// ===================================================================

void FrameMessage::InitAsDefaultInstance() {
  ::x2::_FrameMessage_default_instance_._instance.get_mutable()->smart_msg__ = const_cast< ::x2::SmartFrameMessage*>(
      ::x2::SmartFrameMessage::internal_default_instance());
  ::x2::_FrameMessage_default_instance_._instance.get_mutable()->capture_msg__ = const_cast< ::x2::CaptureFrameMessage*>(
      ::x2::CaptureFrameMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameMessage::kSmartMsgFieldNumber;
const int FrameMessage::kCaptureMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameMessage::FrameMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_x2_2eproto::scc_info_FrameMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.FrameMessage)
}
FrameMessage::FrameMessage(const FrameMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_smart_msg_()) {
    smart_msg__ = new ::x2::SmartFrameMessage(*from.smart_msg__);
  } else {
    smart_msg__ = NULL;
  }
  if (from.has_capture_msg_()) {
    capture_msg__ = new ::x2::CaptureFrameMessage(*from.capture_msg__);
  } else {
    capture_msg__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:x2.FrameMessage)
}

void FrameMessage::SharedCtor() {
  ::memset(&smart_msg__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&capture_msg__) -
      reinterpret_cast<char*>(&smart_msg__)) + sizeof(capture_msg__));
}

FrameMessage::~FrameMessage() {
  // @@protoc_insertion_point(destructor:x2.FrameMessage)
  SharedDtor();
}

void FrameMessage::SharedDtor() {
  if (this != internal_default_instance()) delete smart_msg__;
  if (this != internal_default_instance()) delete capture_msg__;
}

void FrameMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FrameMessage& FrameMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_x2_2eproto::scc_info_FrameMessage.base);
  return *internal_default_instance();
}


void FrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.FrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && smart_msg__ != NULL) {
    delete smart_msg__;
  }
  smart_msg__ = NULL;
  if (GetArenaNoVirtual() == NULL && capture_msg__ != NULL) {
    delete capture_msg__;
  }
  capture_msg__ = NULL;
  _internal_metadata_.Clear();
}

bool FrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x2.FrameMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .x2.SmartFrameMessage smart_msg_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_smart_msg_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x2.CaptureFrameMessage capture_msg_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capture_msg_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.FrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.FrameMessage)
  return false;
#undef DO_
}

void FrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.FrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .x2.SmartFrameMessage smart_msg_ = 1;
  if (this->has_smart_msg_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_smart_msg_(), output);
  }

  // .x2.CaptureFrameMessage capture_msg_ = 2;
  if (this->has_capture_msg_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_capture_msg_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x2.FrameMessage)
}

size_t FrameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x2.FrameMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .x2.SmartFrameMessage smart_msg_ = 1;
  if (this->has_smart_msg_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *smart_msg__);
  }

  // .x2.CaptureFrameMessage capture_msg_ = 2;
  if (this->has_capture_msg_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *capture_msg__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FrameMessage*>(&from));
}

void FrameMessage::MergeFrom(const FrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.FrameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_smart_msg_()) {
    mutable_smart_msg_()->::x2::SmartFrameMessage::MergeFrom(from.smart_msg_());
  }
  if (from.has_capture_msg_()) {
    mutable_capture_msg_()->::x2::CaptureFrameMessage::MergeFrom(from.capture_msg_());
  }
}

void FrameMessage::CopyFrom(const FrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.FrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameMessage::IsInitialized() const {
  return true;
}

void FrameMessage::Swap(FrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameMessage::InternalSwap(FrameMessage* other) {
  using std::swap;
  swap(smart_msg__, other->smart_msg__);
  swap(capture_msg__, other->capture_msg__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FrameMessage::GetTypeName() const {
  return "x2.FrameMessage";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace x2
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::FloatArray* Arena::CreateMaybeMessage< ::x2::FloatArray >(Arena* arena) {
  return Arena::CreateInternal< ::x2::FloatArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::FloatMatrix* Arena::CreateMaybeMessage< ::x2::FloatMatrix >(Arena* arena) {
  return Arena::CreateInternal< ::x2::FloatMatrix >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::Point* Arena::CreateMaybeMessage< ::x2::Point >(Arena* arena) {
  return Arena::CreateInternal< ::x2::Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::Points* Arena::CreateMaybeMessage< ::x2::Points >(Arena* arena) {
  return Arena::CreateInternal< ::x2::Points >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::Box* Arena::CreateMaybeMessage< ::x2::Box >(Arena* arena) {
  return Arena::CreateInternal< ::x2::Box >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::Attributes* Arena::CreateMaybeMessage< ::x2::Attributes >(Arena* arena) {
  return Arena::CreateInternal< ::x2::Attributes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::Target* Arena::CreateMaybeMessage< ::x2::Target >(Arena* arena) {
  return Arena::CreateInternal< ::x2::Target >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::SmartFrameMessage* Arena::CreateMaybeMessage< ::x2::SmartFrameMessage >(Arena* arena) {
  return Arena::CreateInternal< ::x2::SmartFrameMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::DBResult* Arena::CreateMaybeMessage< ::x2::DBResult >(Arena* arena) {
  return Arena::CreateInternal< ::x2::DBResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::Image* Arena::CreateMaybeMessage< ::x2::Image >(Arena* arena) {
  return Arena::CreateInternal< ::x2::Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::CharArray* Arena::CreateMaybeMessage< ::x2::CharArray >(Arena* arena) {
  return Arena::CreateInternal< ::x2::CharArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::Capture* Arena::CreateMaybeMessage< ::x2::Capture >(Arena* arena) {
  return Arena::CreateInternal< ::x2::Capture >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::CaptureTarget* Arena::CreateMaybeMessage< ::x2::CaptureTarget >(Arena* arena) {
  return Arena::CreateInternal< ::x2::CaptureTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::CaptureFrameMessage* Arena::CreateMaybeMessage< ::x2::CaptureFrameMessage >(Arena* arena) {
  return Arena::CreateInternal< ::x2::CaptureFrameMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x2::FrameMessage* Arena::CreateMaybeMessage< ::x2::FrameMessage >(Arena* arena) {
  return Arena::CreateInternal< ::x2::FrameMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
