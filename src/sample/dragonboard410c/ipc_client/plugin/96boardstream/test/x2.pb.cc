// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: x2.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "x2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace x2 {

void protobuf_ShutdownFile_x2_2eproto() {
  delete FloatArray::default_instance_;
  delete FloatMatrix::default_instance_;
  delete Point::default_instance_;
  delete Points::default_instance_;
  delete Box::default_instance_;
  delete Attributes::default_instance_;
  delete Target::default_instance_;
  delete SmartFrameMessage::default_instance_;
  delete DBResult::default_instance_;
  delete Image::default_instance_;
  delete CharArray::default_instance_;
  delete Capture::default_instance_;
  delete CaptureTarget::default_instance_;
  delete CaptureFrameMessage::default_instance_;
  delete FrameMessage::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_x2_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_x2_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_x2_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  FloatArray::default_instance_ = new FloatArray();
  FloatMatrix::default_instance_ = new FloatMatrix();
  Point::default_instance_ = new Point();
  Points::default_instance_ = new Points();
  Box::default_instance_ = new Box();
  Attributes::default_instance_ = new Attributes();
  Target::default_instance_ = new Target();
  SmartFrameMessage::default_instance_ = new SmartFrameMessage();
  DBResult::default_instance_ = new DBResult();
  Image::default_instance_ = new Image();
  CharArray::default_instance_ = new CharArray();
  Capture::default_instance_ = new Capture();
  CaptureTarget::default_instance_ = new CaptureTarget();
  CaptureFrameMessage::default_instance_ = new CaptureFrameMessage();
  FrameMessage::default_instance_ = new FrameMessage();
  FloatArray::default_instance_->InitAsDefaultInstance();
  FloatMatrix::default_instance_->InitAsDefaultInstance();
  Point::default_instance_->InitAsDefaultInstance();
  Points::default_instance_->InitAsDefaultInstance();
  Box::default_instance_->InitAsDefaultInstance();
  Attributes::default_instance_->InitAsDefaultInstance();
  Target::default_instance_->InitAsDefaultInstance();
  SmartFrameMessage::default_instance_->InitAsDefaultInstance();
  DBResult::default_instance_->InitAsDefaultInstance();
  Image::default_instance_->InitAsDefaultInstance();
  CharArray::default_instance_->InitAsDefaultInstance();
  Capture::default_instance_->InitAsDefaultInstance();
  CaptureTarget::default_instance_->InitAsDefaultInstance();
  CaptureFrameMessage::default_instance_->InitAsDefaultInstance();
  FrameMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_x2_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_x2_2eproto_once_);
void protobuf_AddDesc_x2_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_x2_2eproto_once_,
                 &protobuf_AddDesc_x2_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_x2_2eproto {
  StaticDescriptorInitializer_x2_2eproto() {
    protobuf_AddDesc_x2_2eproto();
  }
} static_descriptor_initializer_x2_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatArray::kTypeFieldNumber;
const int FloatArray::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatArray::FloatArray()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.FloatArray)
}

void FloatArray::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FloatArray::FloatArray(const FloatArray& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.FloatArray)
}

void FloatArray::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FloatArray::~FloatArray() {
  // @@protoc_insertion_point(destructor:x2.FloatArray)
  SharedDtor();
}

void FloatArray::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void FloatArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const FloatArray& FloatArray::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

FloatArray* FloatArray::default_instance_ = NULL;

FloatArray* FloatArray::New(::google::protobuf::Arena* arena) const {
  FloatArray* n = new FloatArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FloatArray::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.FloatArray)
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.Clear();
}

bool FloatArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.FloatArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.FloatArray.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value_;
        break;
      }

      // repeated float value_ = 2;
      case 2: {
        if (tag == 18) {
         parse_value_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_value_())));
        } else if (tag == 21) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18, input, this->mutable_value_())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.FloatArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.FloatArray)
  return false;
#undef DO_
}

void FloatArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.FloatArray)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.FloatArray.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated float value_ = 2;
  if (this->value__size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_value__cached_byte_size_);
  }
  for (int i = 0; i < this->value__size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->value_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.FloatArray)
}

int FloatArray::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.FloatArray)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // repeated float value_ = 2;
  {
    int data_size = 0;
    data_size = 4 * this->value__size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value__cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FloatArray::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FloatArray*>(&from));
}

void FloatArray::MergeFrom(const FloatArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.FloatArray)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  value__.MergeFrom(from.value__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void FloatArray::CopyFrom(const FloatArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.FloatArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatArray::IsInitialized() const {

  return true;
}

void FloatArray::Swap(FloatArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatArray::InternalSwap(FloatArray* other) {
  type__.Swap(&other->type__);
  value__.UnsafeArenaSwap(&other->value__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string FloatArray::GetTypeName() const {
  return "x2.FloatArray";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FloatArray

// optional string type_ = 1;
void FloatArray::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FloatArray::type_() const {
  // @@protoc_insertion_point(field_get:x2.FloatArray.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FloatArray::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.FloatArray.type_)
}
 void FloatArray::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.FloatArray.type_)
}
 void FloatArray::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.FloatArray.type_)
}
 ::std::string* FloatArray::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.FloatArray.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FloatArray::release_type_() {
  // @@protoc_insertion_point(field_release:x2.FloatArray.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FloatArray::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.FloatArray.type_)
}

// repeated float value_ = 2;
int FloatArray::value__size() const {
  return value__.size();
}
void FloatArray::clear_value_() {
  value__.Clear();
}
 float FloatArray::value_(int index) const {
  // @@protoc_insertion_point(field_get:x2.FloatArray.value_)
  return value__.Get(index);
}
 void FloatArray::set_value_(int index, float value) {
  value__.Set(index, value);
  // @@protoc_insertion_point(field_set:x2.FloatArray.value_)
}
 void FloatArray::add_value_(float value) {
  value__.Add(value);
  // @@protoc_insertion_point(field_add:x2.FloatArray.value_)
}
 const ::google::protobuf::RepeatedField< float >&
FloatArray::value_() const {
  // @@protoc_insertion_point(field_list:x2.FloatArray.value_)
  return value__;
}
 ::google::protobuf::RepeatedField< float >*
FloatArray::mutable_value_() {
  // @@protoc_insertion_point(field_mutable_list:x2.FloatArray.value_)
  return &value__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatMatrix::kTypeFieldNumber;
const int FloatMatrix::kArraysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatMatrix::FloatMatrix()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.FloatMatrix)
}

void FloatMatrix::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FloatMatrix::FloatMatrix(const FloatMatrix& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.FloatMatrix)
}

void FloatMatrix::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FloatMatrix::~FloatMatrix() {
  // @@protoc_insertion_point(destructor:x2.FloatMatrix)
  SharedDtor();
}

void FloatMatrix::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void FloatMatrix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const FloatMatrix& FloatMatrix::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

FloatMatrix* FloatMatrix::default_instance_ = NULL;

FloatMatrix* FloatMatrix::New(::google::protobuf::Arena* arena) const {
  FloatMatrix* n = new FloatMatrix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FloatMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.FloatMatrix)
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arrays__.Clear();
}

bool FloatMatrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.FloatMatrix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.FloatMatrix.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arrays_;
        break;
      }

      // repeated .x2.FloatArray arrays_ = 2;
      case 2: {
        if (tag == 18) {
         parse_arrays_:
          DO_(input->IncrementRecursionDepth());
         parse_loop_arrays_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arrays_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_arrays_;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.FloatMatrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.FloatMatrix)
  return false;
#undef DO_
}

void FloatMatrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.FloatMatrix)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.FloatMatrix.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated .x2.FloatArray arrays_ = 2;
  for (unsigned int i = 0, n = this->arrays__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->arrays_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.FloatMatrix)
}

int FloatMatrix::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.FloatMatrix)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // repeated .x2.FloatArray arrays_ = 2;
  total_size += 1 * this->arrays__size();
  for (int i = 0; i < this->arrays__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrays_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FloatMatrix::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FloatMatrix*>(&from));
}

void FloatMatrix::MergeFrom(const FloatMatrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.FloatMatrix)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  arrays__.MergeFrom(from.arrays__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void FloatMatrix::CopyFrom(const FloatMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.FloatMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatMatrix::IsInitialized() const {

  return true;
}

void FloatMatrix::Swap(FloatMatrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatMatrix::InternalSwap(FloatMatrix* other) {
  type__.Swap(&other->type__);
  arrays__.UnsafeArenaSwap(&other->arrays__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string FloatMatrix::GetTypeName() const {
  return "x2.FloatMatrix";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FloatMatrix

// optional string type_ = 1;
void FloatMatrix::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FloatMatrix::type_() const {
  // @@protoc_insertion_point(field_get:x2.FloatMatrix.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FloatMatrix::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.FloatMatrix.type_)
}
 void FloatMatrix::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.FloatMatrix.type_)
}
 void FloatMatrix::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.FloatMatrix.type_)
}
 ::std::string* FloatMatrix::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.FloatMatrix.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FloatMatrix::release_type_() {
  // @@protoc_insertion_point(field_release:x2.FloatMatrix.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FloatMatrix::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.FloatMatrix.type_)
}

// repeated .x2.FloatArray arrays_ = 2;
int FloatMatrix::arrays__size() const {
  return arrays__.size();
}
void FloatMatrix::clear_arrays_() {
  arrays__.Clear();
}
const ::x2::FloatArray& FloatMatrix::arrays_(int index) const {
  // @@protoc_insertion_point(field_get:x2.FloatMatrix.arrays_)
  return arrays__.Get(index);
}
::x2::FloatArray* FloatMatrix::mutable_arrays_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.FloatMatrix.arrays_)
  return arrays__.Mutable(index);
}
::x2::FloatArray* FloatMatrix::add_arrays_() {
  // @@protoc_insertion_point(field_add:x2.FloatMatrix.arrays_)
  return arrays__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
FloatMatrix::mutable_arrays_() {
  // @@protoc_insertion_point(field_mutable_list:x2.FloatMatrix.arrays_)
  return &arrays__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
FloatMatrix::arrays_() const {
  // @@protoc_insertion_point(field_list:x2.FloatMatrix.arrays_)
  return arrays__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
const int Point::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Point)
}

void Point::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Point::Point(const Point& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.Point)
}

void Point::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x__ = 0;
  y__ = 0;
  score__ = 0;
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:x2.Point)
  SharedDtor();
}

void Point::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Point& Point::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

Point* Point::default_instance_ = NULL;

Point* Point::New(::google::protobuf::Arena* arena) const {
  Point* n = new Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Point)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Point, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Point*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x__, score__);

#undef ZR_HELPER_
#undef ZR_

}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x_ = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y_;
        break;
      }

      // optional float y_ = 2;
      case 2: {
        if (tag == 21) {
         parse_y_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_score_;
        break;
      }

      // optional float score_ = 3;
      case 3: {
        if (tag == 29) {
         parse_score_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Point)
  // optional float x_ = 1;
  if (this->x_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x_(), output);
  }

  // optional float y_ = 2;
  if (this->y_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y_(), output);
  }

  // optional float score_ = 3;
  if (this->score_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->score_(), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.Point)
}

int Point::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Point)
  int total_size = 0;

  // optional float x_ = 1;
  if (this->x_() != 0) {
    total_size += 1 + 4;
  }

  // optional float y_ = 2;
  if (this->y_() != 0) {
    total_size += 1 + 4;
  }

  // optional float score_ = 3;
  if (this->score_() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Point*>(&from));
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Point)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.x_() != 0) {
    set_x_(from.x_());
  }
  if (from.y_() != 0) {
    set_y_(from.y_());
  }
  if (from.score_() != 0) {
    set_score_(from.score_());
  }
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {

  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  std::swap(x__, other->x__);
  std::swap(y__, other->y__);
  std::swap(score__, other->score__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Point::GetTypeName() const {
  return "x2.Point";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point

// optional float x_ = 1;
void Point::clear_x_() {
  x__ = 0;
}
 float Point::x_() const {
  // @@protoc_insertion_point(field_get:x2.Point.x_)
  return x__;
}
 void Point::set_x_(float value) {
  
  x__ = value;
  // @@protoc_insertion_point(field_set:x2.Point.x_)
}

// optional float y_ = 2;
void Point::clear_y_() {
  y__ = 0;
}
 float Point::y_() const {
  // @@protoc_insertion_point(field_get:x2.Point.y_)
  return y__;
}
 void Point::set_y_(float value) {
  
  y__ = value;
  // @@protoc_insertion_point(field_set:x2.Point.y_)
}

// optional float score_ = 3;
void Point::clear_score_() {
  score__ = 0;
}
 float Point::score_() const {
  // @@protoc_insertion_point(field_get:x2.Point.score_)
  return score__;
}
 void Point::set_score_(float value) {
  
  score__ = value;
  // @@protoc_insertion_point(field_set:x2.Point.score_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Points::kTypeFieldNumber;
const int Points::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Points::Points()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Points)
}

void Points::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Points::Points(const Points& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.Points)
}

void Points::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Points::~Points() {
  // @@protoc_insertion_point(destructor:x2.Points)
  SharedDtor();
}

void Points::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Points::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Points& Points::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

Points* Points::default_instance_ = NULL;

Points* Points::New(::google::protobuf::Arena* arena) const {
  Points* n = new Points;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Points::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Points)
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  points__.Clear();
}

bool Points::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.Points)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Points.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_points_;
        break;
      }

      // repeated .x2.Point points_ = 2;
      case 2: {
        if (tag == 18) {
         parse_points_:
          DO_(input->IncrementRecursionDepth());
         parse_loop_points_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_points_;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Points)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Points)
  return false;
#undef DO_
}

void Points::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Points)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Points.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated .x2.Point points_ = 2;
  for (unsigned int i = 0, n = this->points__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->points_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.Points)
}

int Points::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Points)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // repeated .x2.Point points_ = 2;
  total_size += 1 * this->points__size();
  for (int i = 0; i < this->points__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->points_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Points::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Points*>(&from));
}

void Points::MergeFrom(const Points& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Points)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  points__.MergeFrom(from.points__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void Points::CopyFrom(const Points& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Points)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Points::IsInitialized() const {

  return true;
}

void Points::Swap(Points* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Points::InternalSwap(Points* other) {
  type__.Swap(&other->type__);
  points__.UnsafeArenaSwap(&other->points__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Points::GetTypeName() const {
  return "x2.Points";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Points

// optional string type_ = 1;
void Points::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Points::type_() const {
  // @@protoc_insertion_point(field_get:x2.Points.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Points::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Points.type_)
}
 void Points::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Points.type_)
}
 void Points::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Points.type_)
}
 ::std::string* Points::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Points.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Points::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Points.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Points::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Points.type_)
}

// repeated .x2.Point points_ = 2;
int Points::points__size() const {
  return points__.size();
}
void Points::clear_points_() {
  points__.Clear();
}
const ::x2::Point& Points::points_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Points.points_)
  return points__.Get(index);
}
::x2::Point* Points::mutable_points_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Points.points_)
  return points__.Mutable(index);
}
::x2::Point* Points::add_points_() {
  // @@protoc_insertion_point(field_add:x2.Points.points_)
  return points__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Point >*
Points::mutable_points_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Points.points_)
  return &points__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Point >&
Points::points_() const {
  // @@protoc_insertion_point(field_list:x2.Points.points_)
  return points__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Box::kTypeFieldNumber;
const int Box::kTopLeftFieldNumber;
const int Box::kBottomRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Box::Box()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Box)
}

void Box::InitAsDefaultInstance() {
  _is_default_instance_ = true;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  top_left__ = const_cast< ::x2::Point*>(
      ::x2::Point::internal_default_instance());
#else
  top_left__ = const_cast< ::x2::Point*>(&::x2::Point::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  bottom_right__ = const_cast< ::x2::Point*>(
      ::x2::Point::internal_default_instance());
#else
  bottom_right__ = const_cast< ::x2::Point*>(&::x2::Point::default_instance());
#endif
}

Box::Box(const Box& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.Box)
}

void Box::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_left__ = NULL;
  bottom_right__ = NULL;
}

Box::~Box() {
  // @@protoc_insertion_point(destructor:x2.Box)
  SharedDtor();
}

void Box::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete top_left__;
    delete bottom_right__;
  }
}

void Box::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Box& Box::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

Box* Box::default_instance_ = NULL;

Box* Box::New(::google::protobuf::Arena* arena) const {
  Box* n = new Box;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Box)
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && top_left__ != NULL) delete top_left__;
  top_left__ = NULL;
  if (GetArenaNoVirtual() == NULL && bottom_right__ != NULL) delete bottom_right__;
  bottom_right__ = NULL;
}

bool Box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.Box)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Box.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_top_left_;
        break;
      }

      // optional .x2.Point top_left_ = 2;
      case 2: {
        if (tag == 18) {
         parse_top_left_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_top_left_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bottom_right_;
        break;
      }

      // optional .x2.Point bottom_right_ = 3;
      case 3: {
        if (tag == 26) {
         parse_bottom_right_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bottom_right_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Box)
  return false;
#undef DO_
}

void Box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Box)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Box.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // optional .x2.Point top_left_ = 2;
  if (this->has_top_left_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->top_left__, output);
  }

  // optional .x2.Point bottom_right_ = 3;
  if (this->has_bottom_right_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->bottom_right__, output);
  }

  // @@protoc_insertion_point(serialize_end:x2.Box)
}

int Box::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Box)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // optional .x2.Point top_left_ = 2;
  if (this->has_top_left_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->top_left__);
  }

  // optional .x2.Point bottom_right_ = 3;
  if (this->has_bottom_right_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bottom_right__);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Box::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Box*>(&from));
}

void Box::MergeFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Box)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_top_left_()) {
    mutable_top_left_()->::x2::Point::MergeFrom(from.top_left_());
  }
  if (from.has_bottom_right_()) {
    mutable_bottom_right_()->::x2::Point::MergeFrom(from.bottom_right_());
  }
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Box::IsInitialized() const {

  return true;
}

void Box::Swap(Box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Box::InternalSwap(Box* other) {
  type__.Swap(&other->type__);
  std::swap(top_left__, other->top_left__);
  std::swap(bottom_right__, other->bottom_right__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Box::GetTypeName() const {
  return "x2.Box";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Box

// optional string type_ = 1;
void Box::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Box::type_() const {
  // @@protoc_insertion_point(field_get:x2.Box.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Box::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Box.type_)
}
 void Box::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Box.type_)
}
 void Box::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Box.type_)
}
 ::std::string* Box::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Box.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Box::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Box.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Box::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Box.type_)
}

// optional .x2.Point top_left_ = 2;
bool Box::has_top_left_() const {
  return !_is_default_instance_ && top_left__ != NULL;
}
void Box::clear_top_left_() {
  if (GetArenaNoVirtual() == NULL && top_left__ != NULL) delete top_left__;
  top_left__ = NULL;
}
const ::x2::Point& Box::top_left_() const {
  // @@protoc_insertion_point(field_get:x2.Box.top_left_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return top_left__ != NULL ? *top_left__ : *default_instance().top_left__;
#else
  return top_left__ != NULL ? *top_left__ : *default_instance_->top_left__;
#endif
}
::x2::Point* Box::mutable_top_left_() {
  
  if (top_left__ == NULL) {
    top_left__ = new ::x2::Point;
  }
  // @@protoc_insertion_point(field_mutable:x2.Box.top_left_)
  return top_left__;
}
::x2::Point* Box::release_top_left_() {
  // @@protoc_insertion_point(field_release:x2.Box.top_left_)
  
  ::x2::Point* temp = top_left__;
  top_left__ = NULL;
  return temp;
}
void Box::set_allocated_top_left_(::x2::Point* top_left_) {
  delete top_left__;
  top_left__ = top_left_;
  if (top_left_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.Box.top_left_)
}

// optional .x2.Point bottom_right_ = 3;
bool Box::has_bottom_right_() const {
  return !_is_default_instance_ && bottom_right__ != NULL;
}
void Box::clear_bottom_right_() {
  if (GetArenaNoVirtual() == NULL && bottom_right__ != NULL) delete bottom_right__;
  bottom_right__ = NULL;
}
const ::x2::Point& Box::bottom_right_() const {
  // @@protoc_insertion_point(field_get:x2.Box.bottom_right_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return bottom_right__ != NULL ? *bottom_right__ : *default_instance().bottom_right__;
#else
  return bottom_right__ != NULL ? *bottom_right__ : *default_instance_->bottom_right__;
#endif
}
::x2::Point* Box::mutable_bottom_right_() {
  
  if (bottom_right__ == NULL) {
    bottom_right__ = new ::x2::Point;
  }
  // @@protoc_insertion_point(field_mutable:x2.Box.bottom_right_)
  return bottom_right__;
}
::x2::Point* Box::release_bottom_right_() {
  // @@protoc_insertion_point(field_release:x2.Box.bottom_right_)
  
  ::x2::Point* temp = bottom_right__;
  bottom_right__ = NULL;
  return temp;
}
void Box::set_allocated_bottom_right_(::x2::Point* bottom_right_) {
  delete bottom_right__;
  bottom_right__ = bottom_right_;
  if (bottom_right_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.Box.bottom_right_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attributes::kTypeFieldNumber;
const int Attributes::kValueFieldNumber;
const int Attributes::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attributes::Attributes()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Attributes)
}

void Attributes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Attributes::Attributes(const Attributes& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.Attributes)
}

void Attributes::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__ = 0;
  score__ = 0;
}

Attributes::~Attributes() {
  // @@protoc_insertion_point(destructor:x2.Attributes)
  SharedDtor();
}

void Attributes::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Attributes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Attributes& Attributes::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

Attributes* Attributes::default_instance_ = NULL;

Attributes* Attributes::New(::google::protobuf::Arena* arena) const {
  Attributes* n = new Attributes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Attributes::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Attributes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Attributes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Attributes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(value__, score__);
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Attributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.Attributes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Attributes.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_value_;
        break;
      }

      // optional float value_ = 2;
      case 2: {
        if (tag == 21) {
         parse_value_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_score_;
        break;
      }

      // optional float score_ = 3;
      case 3: {
        if (tag == 29) {
         parse_score_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Attributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Attributes)
  return false;
#undef DO_
}

void Attributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Attributes)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Attributes.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // optional float value_ = 2;
  if (this->value_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value_(), output);
  }

  // optional float score_ = 3;
  if (this->score_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->score_(), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.Attributes)
}

int Attributes::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Attributes)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // optional float value_ = 2;
  if (this->value_() != 0) {
    total_size += 1 + 4;
  }

  // optional float score_ = 3;
  if (this->score_() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Attributes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Attributes*>(&from));
}

void Attributes::MergeFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Attributes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.value_() != 0) {
    set_value_(from.value_());
  }
  if (from.score_() != 0) {
    set_score_(from.score_());
  }
}

void Attributes::CopyFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes::IsInitialized() const {

  return true;
}

void Attributes::Swap(Attributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attributes::InternalSwap(Attributes* other) {
  type__.Swap(&other->type__);
  std::swap(value__, other->value__);
  std::swap(score__, other->score__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Attributes::GetTypeName() const {
  return "x2.Attributes";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Attributes

// optional string type_ = 1;
void Attributes::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Attributes::type_() const {
  // @@protoc_insertion_point(field_get:x2.Attributes.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Attributes::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Attributes.type_)
}
 void Attributes::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Attributes.type_)
}
 void Attributes::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Attributes.type_)
}
 ::std::string* Attributes::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Attributes.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Attributes::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Attributes.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Attributes::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Attributes.type_)
}

// optional float value_ = 2;
void Attributes::clear_value_() {
  value__ = 0;
}
 float Attributes::value_() const {
  // @@protoc_insertion_point(field_get:x2.Attributes.value_)
  return value__;
}
 void Attributes::set_value_(float value) {
  
  value__ = value;
  // @@protoc_insertion_point(field_set:x2.Attributes.value_)
}

// optional float score_ = 3;
void Attributes::clear_score_() {
  score__ = 0;
}
 float Attributes::score_() const {
  // @@protoc_insertion_point(field_get:x2.Attributes.score_)
  return score__;
}
 void Attributes::set_score_(float value) {
  
  score__ = value;
  // @@protoc_insertion_point(field_set:x2.Attributes.score_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Target::kTypeFieldNumber;
const int Target::kTrackIdFieldNumber;
const int Target::kBoxesFieldNumber;
const int Target::kAttributesFieldNumber;
const int Target::kPointsFieldNumber;
const int Target::kFloatArraysFieldNumber;
const int Target::kFloatMatrixsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Target::Target()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Target)
}

void Target::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Target::Target(const Target& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.Target)
}

void Target::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
}

Target::~Target() {
  // @@protoc_insertion_point(destructor:x2.Target)
  SharedDtor();
}

void Target::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Target::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Target& Target::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

Target* Target::default_instance_ = NULL;

Target* Target::New(::google::protobuf::Arena* arena) const {
  Target* n = new Target;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Target::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Target)
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
  boxes__.Clear();
  attributes__.Clear();
  points__.Clear();
  float_arrays__.Clear();
  float_matrixs__.Clear();
}

bool Target::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.Target)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Target.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_track_id_;
        break;
      }

      // optional uint64 track_id_ = 2;
      case 2: {
        if (tag == 16) {
         parse_track_id_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_boxes_;
        break;
      }

      // repeated .x2.Box boxes_ = 3;
      case 3: {
        if (tag == 26) {
         parse_boxes_:
          DO_(input->IncrementRecursionDepth());
         parse_loop_boxes_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_boxes_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_boxes_;
        if (input->ExpectTag(34)) goto parse_loop_attributes_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.Attributes attributes_ = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_attributes_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attributes_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_attributes_;
        if (input->ExpectTag(42)) goto parse_loop_points_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.Points points_ = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_points_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_points_;
        if (input->ExpectTag(50)) goto parse_loop_float_arrays_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.FloatArray float_arrays_ = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_float_arrays_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_float_arrays_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_float_arrays_;
        if (input->ExpectTag(58)) goto parse_loop_float_matrixs_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.FloatMatrix float_matrixs_ = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_float_matrixs_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_float_matrixs_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_float_matrixs_;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Target)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Target)
  return false;
#undef DO_
}

void Target::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Target)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Target.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // optional uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->track_id_(), output);
  }

  // repeated .x2.Box boxes_ = 3;
  for (unsigned int i = 0, n = this->boxes__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->boxes_(i), output);
  }

  // repeated .x2.Attributes attributes_ = 4;
  for (unsigned int i = 0, n = this->attributes__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->attributes_(i), output);
  }

  // repeated .x2.Points points_ = 5;
  for (unsigned int i = 0, n = this->points__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->points_(i), output);
  }

  // repeated .x2.FloatArray float_arrays_ = 6;
  for (unsigned int i = 0, n = this->float_arrays__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->float_arrays_(i), output);
  }

  // repeated .x2.FloatMatrix float_matrixs_ = 7;
  for (unsigned int i = 0, n = this->float_matrixs__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->float_matrixs_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.Target)
}

int Target::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Target)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // optional uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id_());
  }

  // repeated .x2.Box boxes_ = 3;
  total_size += 1 * this->boxes__size();
  for (int i = 0; i < this->boxes__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->boxes_(i));
  }

  // repeated .x2.Attributes attributes_ = 4;
  total_size += 1 * this->attributes__size();
  for (int i = 0; i < this->attributes__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributes_(i));
  }

  // repeated .x2.Points points_ = 5;
  total_size += 1 * this->points__size();
  for (int i = 0; i < this->points__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->points_(i));
  }

  // repeated .x2.FloatArray float_arrays_ = 6;
  total_size += 1 * this->float_arrays__size();
  for (int i = 0; i < this->float_arrays__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->float_arrays_(i));
  }

  // repeated .x2.FloatMatrix float_matrixs_ = 7;
  total_size += 1 * this->float_matrixs__size();
  for (int i = 0; i < this->float_matrixs__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->float_matrixs_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Target::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Target*>(&from));
}

void Target::MergeFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Target)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  boxes__.MergeFrom(from.boxes__);
  attributes__.MergeFrom(from.attributes__);
  points__.MergeFrom(from.points__);
  float_arrays__.MergeFrom(from.float_arrays__);
  float_matrixs__.MergeFrom(from.float_matrixs__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.track_id_() != 0) {
    set_track_id_(from.track_id_());
  }
}

void Target::CopyFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Target::IsInitialized() const {

  return true;
}

void Target::Swap(Target* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Target::InternalSwap(Target* other) {
  type__.Swap(&other->type__);
  std::swap(track_id__, other->track_id__);
  boxes__.UnsafeArenaSwap(&other->boxes__);
  attributes__.UnsafeArenaSwap(&other->attributes__);
  points__.UnsafeArenaSwap(&other->points__);
  float_arrays__.UnsafeArenaSwap(&other->float_arrays__);
  float_matrixs__.UnsafeArenaSwap(&other->float_matrixs__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Target::GetTypeName() const {
  return "x2.Target";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Target

// optional string type_ = 1;
void Target::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Target::type_() const {
  // @@protoc_insertion_point(field_get:x2.Target.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Target::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Target.type_)
}
 void Target::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Target.type_)
}
 void Target::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Target.type_)
}
 ::std::string* Target::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Target.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Target::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Target.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Target::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Target.type_)
}

// optional uint64 track_id_ = 2;
void Target::clear_track_id_() {
  track_id__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Target::track_id_() const {
  // @@protoc_insertion_point(field_get:x2.Target.track_id_)
  return track_id__;
}
 void Target::set_track_id_(::google::protobuf::uint64 value) {
  
  track_id__ = value;
  // @@protoc_insertion_point(field_set:x2.Target.track_id_)
}

// repeated .x2.Box boxes_ = 3;
int Target::boxes__size() const {
  return boxes__.size();
}
void Target::clear_boxes_() {
  boxes__.Clear();
}
const ::x2::Box& Target::boxes_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.boxes_)
  return boxes__.Get(index);
}
::x2::Box* Target::mutable_boxes_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.boxes_)
  return boxes__.Mutable(index);
}
::x2::Box* Target::add_boxes_() {
  // @@protoc_insertion_point(field_add:x2.Target.boxes_)
  return boxes__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Box >*
Target::mutable_boxes_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.boxes_)
  return &boxes__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Box >&
Target::boxes_() const {
  // @@protoc_insertion_point(field_list:x2.Target.boxes_)
  return boxes__;
}

// repeated .x2.Attributes attributes_ = 4;
int Target::attributes__size() const {
  return attributes__.size();
}
void Target::clear_attributes_() {
  attributes__.Clear();
}
const ::x2::Attributes& Target::attributes_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.attributes_)
  return attributes__.Get(index);
}
::x2::Attributes* Target::mutable_attributes_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.attributes_)
  return attributes__.Mutable(index);
}
::x2::Attributes* Target::add_attributes_() {
  // @@protoc_insertion_point(field_add:x2.Target.attributes_)
  return attributes__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Attributes >*
Target::mutable_attributes_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.attributes_)
  return &attributes__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Attributes >&
Target::attributes_() const {
  // @@protoc_insertion_point(field_list:x2.Target.attributes_)
  return attributes__;
}

// repeated .x2.Points points_ = 5;
int Target::points__size() const {
  return points__.size();
}
void Target::clear_points_() {
  points__.Clear();
}
const ::x2::Points& Target::points_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.points_)
  return points__.Get(index);
}
::x2::Points* Target::mutable_points_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.points_)
  return points__.Mutable(index);
}
::x2::Points* Target::add_points_() {
  // @@protoc_insertion_point(field_add:x2.Target.points_)
  return points__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Points >*
Target::mutable_points_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.points_)
  return &points__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Points >&
Target::points_() const {
  // @@protoc_insertion_point(field_list:x2.Target.points_)
  return points__;
}

// repeated .x2.FloatArray float_arrays_ = 6;
int Target::float_arrays__size() const {
  return float_arrays__.size();
}
void Target::clear_float_arrays_() {
  float_arrays__.Clear();
}
const ::x2::FloatArray& Target::float_arrays_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.float_arrays_)
  return float_arrays__.Get(index);
}
::x2::FloatArray* Target::mutable_float_arrays_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.float_arrays_)
  return float_arrays__.Mutable(index);
}
::x2::FloatArray* Target::add_float_arrays_() {
  // @@protoc_insertion_point(field_add:x2.Target.float_arrays_)
  return float_arrays__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
Target::mutable_float_arrays_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.float_arrays_)
  return &float_arrays__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
Target::float_arrays_() const {
  // @@protoc_insertion_point(field_list:x2.Target.float_arrays_)
  return float_arrays__;
}

// repeated .x2.FloatMatrix float_matrixs_ = 7;
int Target::float_matrixs__size() const {
  return float_matrixs__.size();
}
void Target::clear_float_matrixs_() {
  float_matrixs__.Clear();
}
const ::x2::FloatMatrix& Target::float_matrixs_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.float_matrixs_)
  return float_matrixs__.Get(index);
}
::x2::FloatMatrix* Target::mutable_float_matrixs_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.float_matrixs_)
  return float_matrixs__.Mutable(index);
}
::x2::FloatMatrix* Target::add_float_matrixs_() {
  // @@protoc_insertion_point(field_add:x2.Target.float_matrixs_)
  return float_matrixs__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::FloatMatrix >*
Target::mutable_float_matrixs_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.float_matrixs_)
  return &float_matrixs__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::FloatMatrix >&
Target::float_matrixs_() const {
  // @@protoc_insertion_point(field_list:x2.Target.float_matrixs_)
  return float_matrixs__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmartFrameMessage::kTimestampFieldNumber;
const int SmartFrameMessage::kErrorCodeFieldNumber;
const int SmartFrameMessage::kTargetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmartFrameMessage::SmartFrameMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.SmartFrameMessage)
}

void SmartFrameMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SmartFrameMessage::SmartFrameMessage(const SmartFrameMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.SmartFrameMessage)
}

void SmartFrameMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp__ = GOOGLE_ULONGLONG(0);
  error_code__ = 0u;
}

SmartFrameMessage::~SmartFrameMessage() {
  // @@protoc_insertion_point(destructor:x2.SmartFrameMessage)
  SharedDtor();
}

void SmartFrameMessage::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SmartFrameMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SmartFrameMessage& SmartFrameMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

SmartFrameMessage* SmartFrameMessage::default_instance_ = NULL;

SmartFrameMessage* SmartFrameMessage::New(::google::protobuf::Arena* arena) const {
  SmartFrameMessage* n = new SmartFrameMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SmartFrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.SmartFrameMessage)
  timestamp__ = GOOGLE_ULONGLONG(0);
  error_code__ = 0u;
  targets__.Clear();
}

bool SmartFrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.SmartFrameMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 timestamp_ = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error_code_;
        break;
      }

      // optional uint32 error_code_ = 2;
      case 2: {
        if (tag == 16) {
         parse_error_code_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_targets_;
        break;
      }

      // repeated .x2.Target targets_ = 3;
      case 3: {
        if (tag == 26) {
         parse_targets_:
          DO_(input->IncrementRecursionDepth());
         parse_loop_targets_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_targets_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_targets_;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.SmartFrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.SmartFrameMessage)
  return false;
#undef DO_
}

void SmartFrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.SmartFrameMessage)
  // optional fixed64 timestamp_ = 1;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->timestamp_(), output);
  }

  // optional uint32 error_code_ = 2;
  if (this->error_code_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code_(), output);
  }

  // repeated .x2.Target targets_ = 3;
  for (unsigned int i = 0, n = this->targets__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->targets_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.SmartFrameMessage)
}

int SmartFrameMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.SmartFrameMessage)
  int total_size = 0;

  // optional fixed64 timestamp_ = 1;
  if (this->timestamp_() != 0) {
    total_size += 1 + 8;
  }

  // optional uint32 error_code_ = 2;
  if (this->error_code_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code_());
  }

  // repeated .x2.Target targets_ = 3;
  total_size += 1 * this->targets__size();
  for (int i = 0; i < this->targets__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->targets_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SmartFrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SmartFrameMessage*>(&from));
}

void SmartFrameMessage::MergeFrom(const SmartFrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.SmartFrameMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  targets__.MergeFrom(from.targets__);
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.error_code_() != 0) {
    set_error_code_(from.error_code_());
  }
}

void SmartFrameMessage::CopyFrom(const SmartFrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.SmartFrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartFrameMessage::IsInitialized() const {

  return true;
}

void SmartFrameMessage::Swap(SmartFrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmartFrameMessage::InternalSwap(SmartFrameMessage* other) {
  std::swap(timestamp__, other->timestamp__);
  std::swap(error_code__, other->error_code__);
  targets__.UnsafeArenaSwap(&other->targets__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SmartFrameMessage::GetTypeName() const {
  return "x2.SmartFrameMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SmartFrameMessage

// optional fixed64 timestamp_ = 1;
void SmartFrameMessage::clear_timestamp_() {
  timestamp__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SmartFrameMessage::timestamp_() const {
  // @@protoc_insertion_point(field_get:x2.SmartFrameMessage.timestamp_)
  return timestamp__;
}
 void SmartFrameMessage::set_timestamp_(::google::protobuf::uint64 value) {
  
  timestamp__ = value;
  // @@protoc_insertion_point(field_set:x2.SmartFrameMessage.timestamp_)
}

// optional uint32 error_code_ = 2;
void SmartFrameMessage::clear_error_code_() {
  error_code__ = 0u;
}
 ::google::protobuf::uint32 SmartFrameMessage::error_code_() const {
  // @@protoc_insertion_point(field_get:x2.SmartFrameMessage.error_code_)
  return error_code__;
}
 void SmartFrameMessage::set_error_code_(::google::protobuf::uint32 value) {
  
  error_code__ = value;
  // @@protoc_insertion_point(field_set:x2.SmartFrameMessage.error_code_)
}

// repeated .x2.Target targets_ = 3;
int SmartFrameMessage::targets__size() const {
  return targets__.size();
}
void SmartFrameMessage::clear_targets_() {
  targets__.Clear();
}
const ::x2::Target& SmartFrameMessage::targets_(int index) const {
  // @@protoc_insertion_point(field_get:x2.SmartFrameMessage.targets_)
  return targets__.Get(index);
}
::x2::Target* SmartFrameMessage::mutable_targets_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.SmartFrameMessage.targets_)
  return targets__.Mutable(index);
}
::x2::Target* SmartFrameMessage::add_targets_() {
  // @@protoc_insertion_point(field_add:x2.SmartFrameMessage.targets_)
  return targets__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Target >*
SmartFrameMessage::mutable_targets_() {
  // @@protoc_insertion_point(field_mutable_list:x2.SmartFrameMessage.targets_)
  return &targets__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Target >&
SmartFrameMessage::targets_() const {
  // @@protoc_insertion_point(field_list:x2.SmartFrameMessage.targets_)
  return targets__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBResult::kDbTypeFieldNumber;
const int DBResult::kMatchIdFieldNumber;
const int DBResult::kDistanceFieldNumber;
const int DBResult::kSimilarityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBResult::DBResult()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.DBResult)
}

void DBResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBResult::DBResult(const DBResult& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.DBResult)
}

void DBResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  db_type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance__ = 0;
  similarity__ = 0;
}

DBResult::~DBResult() {
  // @@protoc_insertion_point(destructor:x2.DBResult)
  SharedDtor();
}

void DBResult::SharedDtor() {
  db_type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void DBResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DBResult& DBResult::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

DBResult* DBResult::default_instance_ = NULL;

DBResult* DBResult::New(::google::protobuf::Arena* arena) const {
  DBResult* n = new DBResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBResult::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.DBResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(distance__, similarity__);
  db_type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool DBResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.DBResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_type_().data(), this->db_type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.DBResult.db_type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_match_id_;
        break;
      }

      // optional string match_id_ = 2;
      case 2: {
        if (tag == 18) {
         parse_match_id_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_match_id_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->match_id_().data(), this->match_id_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.DBResult.match_id_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_distance_;
        break;
      }

      // optional float distance_ = 3;
      case 3: {
        if (tag == 29) {
         parse_distance_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_similarity_;
        break;
      }

      // optional float similarity_ = 4;
      case 4: {
        if (tag == 37) {
         parse_similarity_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &similarity__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.DBResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.DBResult)
  return false;
#undef DO_
}

void DBResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.DBResult)
  // optional string db_type_ = 1;
  if (this->db_type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_type_().data(), this->db_type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.DBResult.db_type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_type_(), output);
  }

  // optional string match_id_ = 2;
  if (this->match_id_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->match_id_().data(), this->match_id_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.DBResult.match_id_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->match_id_(), output);
  }

  // optional float distance_ = 3;
  if (this->distance_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->distance_(), output);
  }

  // optional float similarity_ = 4;
  if (this->similarity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->similarity_(), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.DBResult)
}

int DBResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.DBResult)
  int total_size = 0;

  // optional string db_type_ = 1;
  if (this->db_type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_type_());
  }

  // optional string match_id_ = 2;
  if (this->match_id_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->match_id_());
  }

  // optional float distance_ = 3;
  if (this->distance_() != 0) {
    total_size += 1 + 4;
  }

  // optional float similarity_ = 4;
  if (this->similarity_() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DBResult*>(&from));
}

void DBResult::MergeFrom(const DBResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.DBResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.db_type_().size() > 0) {

    db_type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_type__);
  }
  if (from.match_id_().size() > 0) {

    match_id__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_id__);
  }
  if (from.distance_() != 0) {
    set_distance_(from.distance_());
  }
  if (from.similarity_() != 0) {
    set_similarity_(from.similarity_());
  }
}

void DBResult::CopyFrom(const DBResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.DBResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBResult::IsInitialized() const {

  return true;
}

void DBResult::Swap(DBResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBResult::InternalSwap(DBResult* other) {
  db_type__.Swap(&other->db_type__);
  match_id__.Swap(&other->match_id__);
  std::swap(distance__, other->distance__);
  std::swap(similarity__, other->similarity__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DBResult::GetTypeName() const {
  return "x2.DBResult";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBResult

// optional string db_type_ = 1;
void DBResult::clear_db_type_() {
  db_type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DBResult::db_type_() const {
  // @@protoc_insertion_point(field_get:x2.DBResult.db_type_)
  return db_type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBResult::set_db_type_(const ::std::string& value) {
  
  db_type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.DBResult.db_type_)
}
 void DBResult::set_db_type_(const char* value) {
  
  db_type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.DBResult.db_type_)
}
 void DBResult::set_db_type_(const char* value, size_t size) {
  
  db_type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.DBResult.db_type_)
}
 ::std::string* DBResult::mutable_db_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.DBResult.db_type_)
  return db_type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBResult::release_db_type_() {
  // @@protoc_insertion_point(field_release:x2.DBResult.db_type_)
  
  return db_type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBResult::set_allocated_db_type_(::std::string* db_type_) {
  if (db_type_ != NULL) {
    
  } else {
    
  }
  db_type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_type_);
  // @@protoc_insertion_point(field_set_allocated:x2.DBResult.db_type_)
}

// optional string match_id_ = 2;
void DBResult::clear_match_id_() {
  match_id__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DBResult::match_id_() const {
  // @@protoc_insertion_point(field_get:x2.DBResult.match_id_)
  return match_id__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBResult::set_match_id_(const ::std::string& value) {
  
  match_id__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.DBResult.match_id_)
}
 void DBResult::set_match_id_(const char* value) {
  
  match_id__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.DBResult.match_id_)
}
 void DBResult::set_match_id_(const char* value, size_t size) {
  
  match_id__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.DBResult.match_id_)
}
 ::std::string* DBResult::mutable_match_id_() {
  
  // @@protoc_insertion_point(field_mutable:x2.DBResult.match_id_)
  return match_id__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBResult::release_match_id_() {
  // @@protoc_insertion_point(field_release:x2.DBResult.match_id_)
  
  return match_id__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBResult::set_allocated_match_id_(::std::string* match_id_) {
  if (match_id_ != NULL) {
    
  } else {
    
  }
  match_id__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), match_id_);
  // @@protoc_insertion_point(field_set_allocated:x2.DBResult.match_id_)
}

// optional float distance_ = 3;
void DBResult::clear_distance_() {
  distance__ = 0;
}
 float DBResult::distance_() const {
  // @@protoc_insertion_point(field_get:x2.DBResult.distance_)
  return distance__;
}
 void DBResult::set_distance_(float value) {
  
  distance__ = value;
  // @@protoc_insertion_point(field_set:x2.DBResult.distance_)
}

// optional float similarity_ = 4;
void DBResult::clear_similarity_() {
  similarity__ = 0;
}
 float DBResult::similarity_() const {
  // @@protoc_insertion_point(field_get:x2.DBResult.similarity_)
  return similarity__;
}
 void DBResult::set_similarity_(float value) {
  
  similarity__ = value;
  // @@protoc_insertion_point(field_set:x2.DBResult.similarity_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kBufFieldNumber;
const int Image::kTypeFieldNumber;
const int Image::kWidthFieldNumber;
const int Image::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Image)
}

void Image::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Image::Image(const Image& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.Image)
}

void Image::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  buf__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  width__ = 0u;
  height__ = 0u;
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:x2.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  buf__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Image& Image::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

Image* Image::default_instance_ = NULL;

Image* Image::New(::google::protobuf::Arena* arena) const {
  Image* n = new Image;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Image)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Image, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Image*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(width__, height__);
  buf__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.Image)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes buf_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_;
        break;
      }

      // optional string type_ = 2;
      case 2: {
        if (tag == 18) {
         parse_type_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Image.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_width_;
        break;
      }

      // optional uint32 width_ = 3;
      case 3: {
        if (tag == 24) {
         parse_width_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_height_;
        break;
      }

      // optional uint32 height_ = 4;
      case 4: {
        if (tag == 32) {
         parse_height_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Image)
  // optional bytes buf_ = 1;
  if (this->buf_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buf_(), output);
  }

  // optional string type_ = 2;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Image.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_(), output);
  }

  // optional uint32 width_ = 3;
  if (this->width_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width_(), output);
  }

  // optional uint32 height_ = 4;
  if (this->height_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height_(), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.Image)
}

int Image::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Image)
  int total_size = 0;

  // optional bytes buf_ = 1;
  if (this->buf_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf_());
  }

  // optional string type_ = 2;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // optional uint32 width_ = 3;
  if (this->width_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width_());
  }

  // optional uint32 height_ = 4;
  if (this->height_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height_());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Image::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Image*>(&from));
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Image)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.buf_().size() > 0) {

    buf__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf__);
  }
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.width_() != 0) {
    set_width_(from.width_());
  }
  if (from.height_() != 0) {
    set_height_(from.height_());
  }
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {

  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  buf__.Swap(&other->buf__);
  type__.Swap(&other->type__);
  std::swap(width__, other->width__);
  std::swap(height__, other->height__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Image::GetTypeName() const {
  return "x2.Image";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Image

// optional bytes buf_ = 1;
void Image::clear_buf_() {
  buf__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Image::buf_() const {
  // @@protoc_insertion_point(field_get:x2.Image.buf_)
  return buf__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_buf_(const ::std::string& value) {
  
  buf__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Image.buf_)
}
 void Image::set_buf_(const char* value) {
  
  buf__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Image.buf_)
}
 void Image::set_buf_(const void* value, size_t size) {
  
  buf__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Image.buf_)
}
 ::std::string* Image::mutable_buf_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Image.buf_)
  return buf__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Image::release_buf_() {
  // @@protoc_insertion_point(field_release:x2.Image.buf_)
  
  return buf__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_allocated_buf_(::std::string* buf_) {
  if (buf_ != NULL) {
    
  } else {
    
  }
  buf__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf_);
  // @@protoc_insertion_point(field_set_allocated:x2.Image.buf_)
}

// optional string type_ = 2;
void Image::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Image::type_() const {
  // @@protoc_insertion_point(field_get:x2.Image.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Image.type_)
}
 void Image::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Image.type_)
}
 void Image::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Image.type_)
}
 ::std::string* Image::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Image.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Image::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Image.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Image.type_)
}

// optional uint32 width_ = 3;
void Image::clear_width_() {
  width__ = 0u;
}
 ::google::protobuf::uint32 Image::width_() const {
  // @@protoc_insertion_point(field_get:x2.Image.width_)
  return width__;
}
 void Image::set_width_(::google::protobuf::uint32 value) {
  
  width__ = value;
  // @@protoc_insertion_point(field_set:x2.Image.width_)
}

// optional uint32 height_ = 4;
void Image::clear_height_() {
  height__ = 0u;
}
 ::google::protobuf::uint32 Image::height_() const {
  // @@protoc_insertion_point(field_get:x2.Image.height_)
  return height__;
}
 void Image::set_height_(::google::protobuf::uint32 value) {
  
  height__ = value;
  // @@protoc_insertion_point(field_set:x2.Image.height_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharArray::kTypeFieldNumber;
const int CharArray::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharArray::CharArray()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.CharArray)
}

void CharArray::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CharArray::CharArray(const CharArray& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.CharArray)
}

void CharArray::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CharArray::~CharArray() {
  // @@protoc_insertion_point(destructor:x2.CharArray)
  SharedDtor();
}

void CharArray::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CharArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CharArray& CharArray::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

CharArray* CharArray::default_instance_ = NULL;

CharArray* CharArray::New(::google::protobuf::Arena* arena) const {
  CharArray* n = new CharArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharArray::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.CharArray)
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CharArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.CharArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.CharArray.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_array_;
        break;
      }

      // optional bytes array_ = 2;
      case 2: {
        if (tag == 18) {
         parse_array_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_array_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.CharArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.CharArray)
  return false;
#undef DO_
}

void CharArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.CharArray)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.CharArray.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // optional bytes array_ = 2;
  if (this->array_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->array_(), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.CharArray)
}

int CharArray::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.CharArray)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // optional bytes array_ = 2;
  if (this->array_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->array_());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharArray::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CharArray*>(&from));
}

void CharArray::MergeFrom(const CharArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.CharArray)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.array_().size() > 0) {

    array__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.array__);
  }
}

void CharArray::CopyFrom(const CharArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.CharArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharArray::IsInitialized() const {

  return true;
}

void CharArray::Swap(CharArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharArray::InternalSwap(CharArray* other) {
  type__.Swap(&other->type__);
  array__.Swap(&other->array__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CharArray::GetTypeName() const {
  return "x2.CharArray";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharArray

// optional string type_ = 1;
void CharArray::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharArray::type_() const {
  // @@protoc_insertion_point(field_get:x2.CharArray.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharArray::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.CharArray.type_)
}
 void CharArray::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.CharArray.type_)
}
 void CharArray::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.CharArray.type_)
}
 ::std::string* CharArray::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.CharArray.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharArray::release_type_() {
  // @@protoc_insertion_point(field_release:x2.CharArray.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharArray::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.CharArray.type_)
}

// optional bytes array_ = 2;
void CharArray::clear_array_() {
  array__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharArray::array_() const {
  // @@protoc_insertion_point(field_get:x2.CharArray.array_)
  return array__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharArray::set_array_(const ::std::string& value) {
  
  array__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.CharArray.array_)
}
 void CharArray::set_array_(const char* value) {
  
  array__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.CharArray.array_)
}
 void CharArray::set_array_(const void* value, size_t size) {
  
  array__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.CharArray.array_)
}
 ::std::string* CharArray::mutable_array_() {
  
  // @@protoc_insertion_point(field_mutable:x2.CharArray.array_)
  return array__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharArray::release_array_() {
  // @@protoc_insertion_point(field_release:x2.CharArray.array_)
  
  return array__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharArray::set_allocated_array_(::std::string* array_) {
  if (array_ != NULL) {
    
  } else {
    
  }
  array__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), array_);
  // @@protoc_insertion_point(field_set_allocated:x2.CharArray.array_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Capture::kTypeFieldNumber;
const int Capture::kTimestampFieldNumber;
const int Capture::kImgFieldNumber;
const int Capture::kBoxesFieldNumber;
const int Capture::kAttributesFieldNumber;
const int Capture::kPointsFieldNumber;
const int Capture::kFloatArraysFieldNumber;
const int Capture::kCharArraysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Capture::Capture()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.Capture)
}

void Capture::InitAsDefaultInstance() {
  _is_default_instance_ = true;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  img__ = const_cast< ::x2::Image*>(
      ::x2::Image::internal_default_instance());
#else
  img__ = const_cast< ::x2::Image*>(&::x2::Image::default_instance());
#endif
}

Capture::Capture(const Capture& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.Capture)
}

void Capture::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp__ = GOOGLE_ULONGLONG(0);
  img__ = NULL;
}

Capture::~Capture() {
  // @@protoc_insertion_point(destructor:x2.Capture)
  SharedDtor();
}

void Capture::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete img__;
  }
}

void Capture::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Capture& Capture::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

Capture* Capture::default_instance_ = NULL;

Capture* Capture::New(::google::protobuf::Arena* arena) const {
  Capture* n = new Capture;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Capture::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.Capture)
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp__ = GOOGLE_ULONGLONG(0);
  if (GetArenaNoVirtual() == NULL && img__ != NULL) delete img__;
  img__ = NULL;
  boxes__.Clear();
  attributes__.Clear();
  points__.Clear();
  float_arrays__.Clear();
  char_arrays__.Clear();
}

bool Capture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.Capture)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.Capture.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_timestamp_;
        break;
      }

      // optional fixed64 timestamp_ = 2;
      case 2: {
        if (tag == 17) {
         parse_timestamp_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_img_;
        break;
      }

      // optional .x2.Image img_ = 3;
      case 3: {
        if (tag == 26) {
         parse_img_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_img_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_boxes_;
        break;
      }

      // repeated .x2.Box boxes_ = 4;
      case 4: {
        if (tag == 34) {
         parse_boxes_:
          DO_(input->IncrementRecursionDepth());
         parse_loop_boxes_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_boxes_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_boxes_;
        if (input->ExpectTag(42)) goto parse_loop_attributes_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.Attributes attributes_ = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_attributes_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attributes_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_attributes_;
        if (input->ExpectTag(50)) goto parse_loop_points_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.Points points_ = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_points_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_points_;
        if (input->ExpectTag(58)) goto parse_loop_float_arrays_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.FloatArray float_arrays_ = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_float_arrays_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_float_arrays_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_float_arrays_;
        if (input->ExpectTag(66)) goto parse_loop_char_arrays_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.CharArray char_arrays_ = 8;
      case 8: {
        if (tag == 66) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_char_arrays_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_char_arrays_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_char_arrays_;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.Capture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.Capture)
  return false;
#undef DO_
}

void Capture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.Capture)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.Capture.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // optional fixed64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->timestamp_(), output);
  }

  // optional .x2.Image img_ = 3;
  if (this->has_img_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->img__, output);
  }

  // repeated .x2.Box boxes_ = 4;
  for (unsigned int i = 0, n = this->boxes__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->boxes_(i), output);
  }

  // repeated .x2.Attributes attributes_ = 5;
  for (unsigned int i = 0, n = this->attributes__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->attributes_(i), output);
  }

  // repeated .x2.Points points_ = 6;
  for (unsigned int i = 0, n = this->points__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->points_(i), output);
  }

  // repeated .x2.FloatArray float_arrays_ = 7;
  for (unsigned int i = 0, n = this->float_arrays__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->float_arrays_(i), output);
  }

  // repeated .x2.CharArray char_arrays_ = 8;
  for (unsigned int i = 0, n = this->char_arrays__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, this->char_arrays_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.Capture)
}

int Capture::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.Capture)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // optional fixed64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    total_size += 1 + 8;
  }

  // optional .x2.Image img_ = 3;
  if (this->has_img_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->img__);
  }

  // repeated .x2.Box boxes_ = 4;
  total_size += 1 * this->boxes__size();
  for (int i = 0; i < this->boxes__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->boxes_(i));
  }

  // repeated .x2.Attributes attributes_ = 5;
  total_size += 1 * this->attributes__size();
  for (int i = 0; i < this->attributes__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributes_(i));
  }

  // repeated .x2.Points points_ = 6;
  total_size += 1 * this->points__size();
  for (int i = 0; i < this->points__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->points_(i));
  }

  // repeated .x2.FloatArray float_arrays_ = 7;
  total_size += 1 * this->float_arrays__size();
  for (int i = 0; i < this->float_arrays__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->float_arrays_(i));
  }

  // repeated .x2.CharArray char_arrays_ = 8;
  total_size += 1 * this->char_arrays__size();
  for (int i = 0; i < this->char_arrays__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->char_arrays_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Capture::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Capture*>(&from));
}

void Capture::MergeFrom(const Capture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.Capture)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  boxes__.MergeFrom(from.boxes__);
  attributes__.MergeFrom(from.attributes__);
  points__.MergeFrom(from.points__);
  float_arrays__.MergeFrom(from.float_arrays__);
  char_arrays__.MergeFrom(from.char_arrays__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.has_img_()) {
    mutable_img_()->::x2::Image::MergeFrom(from.img_());
  }
}

void Capture::CopyFrom(const Capture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.Capture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Capture::IsInitialized() const {

  return true;
}

void Capture::Swap(Capture* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Capture::InternalSwap(Capture* other) {
  type__.Swap(&other->type__);
  std::swap(timestamp__, other->timestamp__);
  std::swap(img__, other->img__);
  boxes__.UnsafeArenaSwap(&other->boxes__);
  attributes__.UnsafeArenaSwap(&other->attributes__);
  points__.UnsafeArenaSwap(&other->points__);
  float_arrays__.UnsafeArenaSwap(&other->float_arrays__);
  char_arrays__.UnsafeArenaSwap(&other->char_arrays__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Capture::GetTypeName() const {
  return "x2.Capture";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Capture

// optional string type_ = 1;
void Capture::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Capture::type_() const {
  // @@protoc_insertion_point(field_get:x2.Capture.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Capture::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Capture.type_)
}
 void Capture::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Capture.type_)
}
 void Capture::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Capture.type_)
}
 ::std::string* Capture::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Capture.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Capture::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Capture.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Capture::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Capture.type_)
}

// optional fixed64 timestamp_ = 2;
void Capture::clear_timestamp_() {
  timestamp__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Capture::timestamp_() const {
  // @@protoc_insertion_point(field_get:x2.Capture.timestamp_)
  return timestamp__;
}
 void Capture::set_timestamp_(::google::protobuf::uint64 value) {
  
  timestamp__ = value;
  // @@protoc_insertion_point(field_set:x2.Capture.timestamp_)
}

// optional .x2.Image img_ = 3;
bool Capture::has_img_() const {
  return !_is_default_instance_ && img__ != NULL;
}
void Capture::clear_img_() {
  if (GetArenaNoVirtual() == NULL && img__ != NULL) delete img__;
  img__ = NULL;
}
const ::x2::Image& Capture::img_() const {
  // @@protoc_insertion_point(field_get:x2.Capture.img_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return img__ != NULL ? *img__ : *default_instance().img__;
#else
  return img__ != NULL ? *img__ : *default_instance_->img__;
#endif
}
::x2::Image* Capture::mutable_img_() {
  
  if (img__ == NULL) {
    img__ = new ::x2::Image;
  }
  // @@protoc_insertion_point(field_mutable:x2.Capture.img_)
  return img__;
}
::x2::Image* Capture::release_img_() {
  // @@protoc_insertion_point(field_release:x2.Capture.img_)
  
  ::x2::Image* temp = img__;
  img__ = NULL;
  return temp;
}
void Capture::set_allocated_img_(::x2::Image* img_) {
  delete img__;
  img__ = img_;
  if (img_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.Capture.img_)
}

// repeated .x2.Box boxes_ = 4;
int Capture::boxes__size() const {
  return boxes__.size();
}
void Capture::clear_boxes_() {
  boxes__.Clear();
}
const ::x2::Box& Capture::boxes_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.boxes_)
  return boxes__.Get(index);
}
::x2::Box* Capture::mutable_boxes_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.boxes_)
  return boxes__.Mutable(index);
}
::x2::Box* Capture::add_boxes_() {
  // @@protoc_insertion_point(field_add:x2.Capture.boxes_)
  return boxes__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Box >*
Capture::mutable_boxes_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.boxes_)
  return &boxes__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Box >&
Capture::boxes_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.boxes_)
  return boxes__;
}

// repeated .x2.Attributes attributes_ = 5;
int Capture::attributes__size() const {
  return attributes__.size();
}
void Capture::clear_attributes_() {
  attributes__.Clear();
}
const ::x2::Attributes& Capture::attributes_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.attributes_)
  return attributes__.Get(index);
}
::x2::Attributes* Capture::mutable_attributes_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.attributes_)
  return attributes__.Mutable(index);
}
::x2::Attributes* Capture::add_attributes_() {
  // @@protoc_insertion_point(field_add:x2.Capture.attributes_)
  return attributes__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Attributes >*
Capture::mutable_attributes_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.attributes_)
  return &attributes__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Attributes >&
Capture::attributes_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.attributes_)
  return attributes__;
}

// repeated .x2.Points points_ = 6;
int Capture::points__size() const {
  return points__.size();
}
void Capture::clear_points_() {
  points__.Clear();
}
const ::x2::Points& Capture::points_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.points_)
  return points__.Get(index);
}
::x2::Points* Capture::mutable_points_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.points_)
  return points__.Mutable(index);
}
::x2::Points* Capture::add_points_() {
  // @@protoc_insertion_point(field_add:x2.Capture.points_)
  return points__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Points >*
Capture::mutable_points_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.points_)
  return &points__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Points >&
Capture::points_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.points_)
  return points__;
}

// repeated .x2.FloatArray float_arrays_ = 7;
int Capture::float_arrays__size() const {
  return float_arrays__.size();
}
void Capture::clear_float_arrays_() {
  float_arrays__.Clear();
}
const ::x2::FloatArray& Capture::float_arrays_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.float_arrays_)
  return float_arrays__.Get(index);
}
::x2::FloatArray* Capture::mutable_float_arrays_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.float_arrays_)
  return float_arrays__.Mutable(index);
}
::x2::FloatArray* Capture::add_float_arrays_() {
  // @@protoc_insertion_point(field_add:x2.Capture.float_arrays_)
  return float_arrays__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
Capture::mutable_float_arrays_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.float_arrays_)
  return &float_arrays__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
Capture::float_arrays_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.float_arrays_)
  return float_arrays__;
}

// repeated .x2.CharArray char_arrays_ = 8;
int Capture::char_arrays__size() const {
  return char_arrays__.size();
}
void Capture::clear_char_arrays_() {
  char_arrays__.Clear();
}
const ::x2::CharArray& Capture::char_arrays_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.char_arrays_)
  return char_arrays__.Get(index);
}
::x2::CharArray* Capture::mutable_char_arrays_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.char_arrays_)
  return char_arrays__.Mutable(index);
}
::x2::CharArray* Capture::add_char_arrays_() {
  // @@protoc_insertion_point(field_add:x2.Capture.char_arrays_)
  return char_arrays__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::CharArray >*
Capture::mutable_char_arrays_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.char_arrays_)
  return &char_arrays__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::CharArray >&
Capture::char_arrays_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.char_arrays_)
  return char_arrays__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CaptureTarget::kTypeFieldNumber;
const int CaptureTarget::kTrackIdFieldNumber;
const int CaptureTarget::kCapturesFieldNumber;
const int CaptureTarget::kDbResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CaptureTarget::CaptureTarget()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.CaptureTarget)
}

void CaptureTarget::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CaptureTarget::CaptureTarget(const CaptureTarget& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.CaptureTarget)
}

void CaptureTarget::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
}

CaptureTarget::~CaptureTarget() {
  // @@protoc_insertion_point(destructor:x2.CaptureTarget)
  SharedDtor();
}

void CaptureTarget::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CaptureTarget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CaptureTarget& CaptureTarget::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

CaptureTarget* CaptureTarget::default_instance_ = NULL;

CaptureTarget* CaptureTarget::New(::google::protobuf::Arena* arena) const {
  CaptureTarget* n = new CaptureTarget;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CaptureTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.CaptureTarget)
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
  captures__.Clear();
  db_results__.Clear();
}

bool CaptureTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.CaptureTarget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), this->type_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x2.CaptureTarget.type_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_track_id_;
        break;
      }

      // optional uint64 track_id_ = 2;
      case 2: {
        if (tag == 16) {
         parse_track_id_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_captures_;
        break;
      }

      // repeated .x2.Capture captures_ = 3;
      case 3: {
        if (tag == 26) {
         parse_captures_:
          DO_(input->IncrementRecursionDepth());
         parse_loop_captures_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_captures_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_captures_;
        if (input->ExpectTag(34)) goto parse_loop_db_results_;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .x2.DBResult db_results_ = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_db_results_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_db_results_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_db_results_;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.CaptureTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.CaptureTarget)
  return false;
#undef DO_
}

void CaptureTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.CaptureTarget)
  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), this->type_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x2.CaptureTarget.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // optional uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->track_id_(), output);
  }

  // repeated .x2.Capture captures_ = 3;
  for (unsigned int i = 0, n = this->captures__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->captures_(i), output);
  }

  // repeated .x2.DBResult db_results_ = 4;
  for (unsigned int i = 0, n = this->db_results__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->db_results_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.CaptureTarget)
}

int CaptureTarget::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.CaptureTarget)
  int total_size = 0;

  // optional string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // optional uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id_());
  }

  // repeated .x2.Capture captures_ = 3;
  total_size += 1 * this->captures__size();
  for (int i = 0; i < this->captures__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->captures_(i));
  }

  // repeated .x2.DBResult db_results_ = 4;
  total_size += 1 * this->db_results__size();
  for (int i = 0; i < this->db_results__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->db_results_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CaptureTarget::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CaptureTarget*>(&from));
}

void CaptureTarget::MergeFrom(const CaptureTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.CaptureTarget)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  captures__.MergeFrom(from.captures__);
  db_results__.MergeFrom(from.db_results__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.track_id_() != 0) {
    set_track_id_(from.track_id_());
  }
}

void CaptureTarget::CopyFrom(const CaptureTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.CaptureTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureTarget::IsInitialized() const {

  return true;
}

void CaptureTarget::Swap(CaptureTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CaptureTarget::InternalSwap(CaptureTarget* other) {
  type__.Swap(&other->type__);
  std::swap(track_id__, other->track_id__);
  captures__.UnsafeArenaSwap(&other->captures__);
  db_results__.UnsafeArenaSwap(&other->db_results__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CaptureTarget::GetTypeName() const {
  return "x2.CaptureTarget";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CaptureTarget

// optional string type_ = 1;
void CaptureTarget::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CaptureTarget::type_() const {
  // @@protoc_insertion_point(field_get:x2.CaptureTarget.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CaptureTarget::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.CaptureTarget.type_)
}
 void CaptureTarget::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.CaptureTarget.type_)
}
 void CaptureTarget::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.CaptureTarget.type_)
}
 ::std::string* CaptureTarget::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.CaptureTarget.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CaptureTarget::release_type_() {
  // @@protoc_insertion_point(field_release:x2.CaptureTarget.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CaptureTarget::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.CaptureTarget.type_)
}

// optional uint64 track_id_ = 2;
void CaptureTarget::clear_track_id_() {
  track_id__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CaptureTarget::track_id_() const {
  // @@protoc_insertion_point(field_get:x2.CaptureTarget.track_id_)
  return track_id__;
}
 void CaptureTarget::set_track_id_(::google::protobuf::uint64 value) {
  
  track_id__ = value;
  // @@protoc_insertion_point(field_set:x2.CaptureTarget.track_id_)
}

// repeated .x2.Capture captures_ = 3;
int CaptureTarget::captures__size() const {
  return captures__.size();
}
void CaptureTarget::clear_captures_() {
  captures__.Clear();
}
const ::x2::Capture& CaptureTarget::captures_(int index) const {
  // @@protoc_insertion_point(field_get:x2.CaptureTarget.captures_)
  return captures__.Get(index);
}
::x2::Capture* CaptureTarget::mutable_captures_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.CaptureTarget.captures_)
  return captures__.Mutable(index);
}
::x2::Capture* CaptureTarget::add_captures_() {
  // @@protoc_insertion_point(field_add:x2.CaptureTarget.captures_)
  return captures__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::Capture >*
CaptureTarget::mutable_captures_() {
  // @@protoc_insertion_point(field_mutable_list:x2.CaptureTarget.captures_)
  return &captures__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::Capture >&
CaptureTarget::captures_() const {
  // @@protoc_insertion_point(field_list:x2.CaptureTarget.captures_)
  return captures__;
}

// repeated .x2.DBResult db_results_ = 4;
int CaptureTarget::db_results__size() const {
  return db_results__.size();
}
void CaptureTarget::clear_db_results_() {
  db_results__.Clear();
}
const ::x2::DBResult& CaptureTarget::db_results_(int index) const {
  // @@protoc_insertion_point(field_get:x2.CaptureTarget.db_results_)
  return db_results__.Get(index);
}
::x2::DBResult* CaptureTarget::mutable_db_results_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.CaptureTarget.db_results_)
  return db_results__.Mutable(index);
}
::x2::DBResult* CaptureTarget::add_db_results_() {
  // @@protoc_insertion_point(field_add:x2.CaptureTarget.db_results_)
  return db_results__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::DBResult >*
CaptureTarget::mutable_db_results_() {
  // @@protoc_insertion_point(field_mutable_list:x2.CaptureTarget.db_results_)
  return &db_results__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::DBResult >&
CaptureTarget::db_results_() const {
  // @@protoc_insertion_point(field_list:x2.CaptureTarget.db_results_)
  return db_results__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CaptureFrameMessage::kTargetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CaptureFrameMessage::CaptureFrameMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.CaptureFrameMessage)
}

void CaptureFrameMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CaptureFrameMessage::CaptureFrameMessage(const CaptureFrameMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.CaptureFrameMessage)
}

void CaptureFrameMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CaptureFrameMessage::~CaptureFrameMessage() {
  // @@protoc_insertion_point(destructor:x2.CaptureFrameMessage)
  SharedDtor();
}

void CaptureFrameMessage::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CaptureFrameMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CaptureFrameMessage& CaptureFrameMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

CaptureFrameMessage* CaptureFrameMessage::default_instance_ = NULL;

CaptureFrameMessage* CaptureFrameMessage::New(::google::protobuf::Arena* arena) const {
  CaptureFrameMessage* n = new CaptureFrameMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CaptureFrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.CaptureFrameMessage)
  targets__.Clear();
}

bool CaptureFrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.CaptureFrameMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .x2.CaptureTarget targets_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_targets_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_targets_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_targets_;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.CaptureFrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.CaptureFrameMessage)
  return false;
#undef DO_
}

void CaptureFrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.CaptureFrameMessage)
  // repeated .x2.CaptureTarget targets_ = 1;
  for (unsigned int i = 0, n = this->targets__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->targets_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:x2.CaptureFrameMessage)
}

int CaptureFrameMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.CaptureFrameMessage)
  int total_size = 0;

  // repeated .x2.CaptureTarget targets_ = 1;
  total_size += 1 * this->targets__size();
  for (int i = 0; i < this->targets__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->targets_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CaptureFrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CaptureFrameMessage*>(&from));
}

void CaptureFrameMessage::MergeFrom(const CaptureFrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.CaptureFrameMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  targets__.MergeFrom(from.targets__);
}

void CaptureFrameMessage::CopyFrom(const CaptureFrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.CaptureFrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureFrameMessage::IsInitialized() const {

  return true;
}

void CaptureFrameMessage::Swap(CaptureFrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CaptureFrameMessage::InternalSwap(CaptureFrameMessage* other) {
  targets__.UnsafeArenaSwap(&other->targets__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CaptureFrameMessage::GetTypeName() const {
  return "x2.CaptureFrameMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CaptureFrameMessage

// repeated .x2.CaptureTarget targets_ = 1;
int CaptureFrameMessage::targets__size() const {
  return targets__.size();
}
void CaptureFrameMessage::clear_targets_() {
  targets__.Clear();
}
const ::x2::CaptureTarget& CaptureFrameMessage::targets_(int index) const {
  // @@protoc_insertion_point(field_get:x2.CaptureFrameMessage.targets_)
  return targets__.Get(index);
}
::x2::CaptureTarget* CaptureFrameMessage::mutable_targets_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.CaptureFrameMessage.targets_)
  return targets__.Mutable(index);
}
::x2::CaptureTarget* CaptureFrameMessage::add_targets_() {
  // @@protoc_insertion_point(field_add:x2.CaptureFrameMessage.targets_)
  return targets__.Add();
}
::google::protobuf::RepeatedPtrField< ::x2::CaptureTarget >*
CaptureFrameMessage::mutable_targets_() {
  // @@protoc_insertion_point(field_mutable_list:x2.CaptureFrameMessage.targets_)
  return &targets__;
}
const ::google::protobuf::RepeatedPtrField< ::x2::CaptureTarget >&
CaptureFrameMessage::targets_() const {
  // @@protoc_insertion_point(field_list:x2.CaptureFrameMessage.targets_)
  return targets__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameMessage::kSmartMsgFieldNumber;
const int FrameMessage::kCaptureMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameMessage::FrameMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:x2.FrameMessage)
}

void FrameMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  smart_msg__ = const_cast< ::x2::SmartFrameMessage*>(
      ::x2::SmartFrameMessage::internal_default_instance());
#else
  smart_msg__ = const_cast< ::x2::SmartFrameMessage*>(&::x2::SmartFrameMessage::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  capture_msg__ = const_cast< ::x2::CaptureFrameMessage*>(
      ::x2::CaptureFrameMessage::internal_default_instance());
#else
  capture_msg__ = const_cast< ::x2::CaptureFrameMessage*>(&::x2::CaptureFrameMessage::default_instance());
#endif
}

FrameMessage::FrameMessage(const FrameMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:x2.FrameMessage)
}

void FrameMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  smart_msg__ = NULL;
  capture_msg__ = NULL;
}

FrameMessage::~FrameMessage() {
  // @@protoc_insertion_point(destructor:x2.FrameMessage)
  SharedDtor();
}

void FrameMessage::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete smart_msg__;
    delete capture_msg__;
  }
}

void FrameMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const FrameMessage& FrameMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_x2_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_x2_2eproto();
#endif
  return *default_instance_;
}

FrameMessage* FrameMessage::default_instance_ = NULL;

FrameMessage* FrameMessage::New(::google::protobuf::Arena* arena) const {
  FrameMessage* n = new FrameMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x2.FrameMessage)
  if (GetArenaNoVirtual() == NULL && smart_msg__ != NULL) delete smart_msg__;
  smart_msg__ = NULL;
  if (GetArenaNoVirtual() == NULL && capture_msg__ != NULL) delete capture_msg__;
  capture_msg__ = NULL;
}

bool FrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:x2.FrameMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .x2.SmartFrameMessage smart_msg_ = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_smart_msg_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_capture_msg_;
        break;
      }

      // optional .x2.CaptureFrameMessage capture_msg_ = 2;
      case 2: {
        if (tag == 18) {
         parse_capture_msg_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_capture_msg_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x2.FrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x2.FrameMessage)
  return false;
#undef DO_
}

void FrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x2.FrameMessage)
  // optional .x2.SmartFrameMessage smart_msg_ = 1;
  if (this->has_smart_msg_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->smart_msg__, output);
  }

  // optional .x2.CaptureFrameMessage capture_msg_ = 2;
  if (this->has_capture_msg_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->capture_msg__, output);
  }

  // @@protoc_insertion_point(serialize_end:x2.FrameMessage)
}

int FrameMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:x2.FrameMessage)
  int total_size = 0;

  // optional .x2.SmartFrameMessage smart_msg_ = 1;
  if (this->has_smart_msg_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->smart_msg__);
  }

  // optional .x2.CaptureFrameMessage capture_msg_ = 2;
  if (this->has_capture_msg_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->capture_msg__);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FrameMessage*>(&from));
}

void FrameMessage::MergeFrom(const FrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x2.FrameMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_smart_msg_()) {
    mutable_smart_msg_()->::x2::SmartFrameMessage::MergeFrom(from.smart_msg_());
  }
  if (from.has_capture_msg_()) {
    mutable_capture_msg_()->::x2::CaptureFrameMessage::MergeFrom(from.capture_msg_());
  }
}

void FrameMessage::CopyFrom(const FrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x2.FrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameMessage::IsInitialized() const {

  return true;
}

void FrameMessage::Swap(FrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameMessage::InternalSwap(FrameMessage* other) {
  std::swap(smart_msg__, other->smart_msg__);
  std::swap(capture_msg__, other->capture_msg__);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string FrameMessage::GetTypeName() const {
  return "x2.FrameMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameMessage

// optional .x2.SmartFrameMessage smart_msg_ = 1;
bool FrameMessage::has_smart_msg_() const {
  return !_is_default_instance_ && smart_msg__ != NULL;
}
void FrameMessage::clear_smart_msg_() {
  if (GetArenaNoVirtual() == NULL && smart_msg__ != NULL) delete smart_msg__;
  smart_msg__ = NULL;
}
const ::x2::SmartFrameMessage& FrameMessage::smart_msg_() const {
  // @@protoc_insertion_point(field_get:x2.FrameMessage.smart_msg_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return smart_msg__ != NULL ? *smart_msg__ : *default_instance().smart_msg__;
#else
  return smart_msg__ != NULL ? *smart_msg__ : *default_instance_->smart_msg__;
#endif
}
::x2::SmartFrameMessage* FrameMessage::mutable_smart_msg_() {
  
  if (smart_msg__ == NULL) {
    smart_msg__ = new ::x2::SmartFrameMessage;
  }
  // @@protoc_insertion_point(field_mutable:x2.FrameMessage.smart_msg_)
  return smart_msg__;
}
::x2::SmartFrameMessage* FrameMessage::release_smart_msg_() {
  // @@protoc_insertion_point(field_release:x2.FrameMessage.smart_msg_)
  
  ::x2::SmartFrameMessage* temp = smart_msg__;
  smart_msg__ = NULL;
  return temp;
}
void FrameMessage::set_allocated_smart_msg_(::x2::SmartFrameMessage* smart_msg_) {
  delete smart_msg__;
  smart_msg__ = smart_msg_;
  if (smart_msg_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.FrameMessage.smart_msg_)
}

// optional .x2.CaptureFrameMessage capture_msg_ = 2;
bool FrameMessage::has_capture_msg_() const {
  return !_is_default_instance_ && capture_msg__ != NULL;
}
void FrameMessage::clear_capture_msg_() {
  if (GetArenaNoVirtual() == NULL && capture_msg__ != NULL) delete capture_msg__;
  capture_msg__ = NULL;
}
const ::x2::CaptureFrameMessage& FrameMessage::capture_msg_() const {
  // @@protoc_insertion_point(field_get:x2.FrameMessage.capture_msg_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return capture_msg__ != NULL ? *capture_msg__ : *default_instance().capture_msg__;
#else
  return capture_msg__ != NULL ? *capture_msg__ : *default_instance_->capture_msg__;
#endif
}
::x2::CaptureFrameMessage* FrameMessage::mutable_capture_msg_() {
  
  if (capture_msg__ == NULL) {
    capture_msg__ = new ::x2::CaptureFrameMessage;
  }
  // @@protoc_insertion_point(field_mutable:x2.FrameMessage.capture_msg_)
  return capture_msg__;
}
::x2::CaptureFrameMessage* FrameMessage::release_capture_msg_() {
  // @@protoc_insertion_point(field_release:x2.FrameMessage.capture_msg_)
  
  ::x2::CaptureFrameMessage* temp = capture_msg__;
  capture_msg__ = NULL;
  return temp;
}
void FrameMessage::set_allocated_capture_msg_(::x2::CaptureFrameMessage* capture_msg_) {
  delete capture_msg__;
  capture_msg__ = capture_msg_;
  if (capture_msg_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.FrameMessage.capture_msg_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace x2

// @@protoc_insertion_point(global_scope)
